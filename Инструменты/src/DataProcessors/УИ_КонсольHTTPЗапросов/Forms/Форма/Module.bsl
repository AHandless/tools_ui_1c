
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗапросHTTP = "GET";
	КодировкаТелаЗапроса = "Авто";
	ВидТелаЗапроса = "Строкой";
	АдресФайлаТелаЗапроса = ПоместитьВоВременноеХранилище(Новый Структура, УникальныйИдентификатор);
	АдресДвоичныхДанныхТелаЗапроса = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);

	Элементы.КодировкаТелаЗапроса.СписокВыбора.Добавить("Системная");
	Элементы.КодировкаТелаЗапроса.СписокВыбора.Добавить("ANSI");
	Элементы.КодировкаТелаЗапроса.СписокВыбора.Добавить("OEM");
	Элементы.КодировкаТелаЗапроса.СписокВыбора.Добавить("UTF8");
	Элементы.КодировкаТелаЗапроса.СписокВыбора.Добавить("UTF16");

	Если Параметры.Свойство("ДанныеОтладки") Тогда
		ЗаполнитьПоДаннымОтладки(Параметры.ДанныеОтладки);
	КонецЕсли;

	УстановитьДоступностьТелаЗапроса(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИсторияЗапросовВыбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка)
	ЗаполнитьДанныеТекущегоЗапросаПоИстории(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ИсторияЗапросовПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.ИсторияЗапросов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекДанные.ВидТелаЗапроса = "Строкой" Тогда
		НоваяСтраница = Элементы.ГруппаИсторияЗапросовТелоЗапросаСтраницаСтрока;
	ИначеЕсли ТекДанные.ВидТелаЗапроса = "ДвоичныеДанные" Тогда
		НоваяСтраница = Элементы.ГруппаИсторияЗапросовТелоЗапросаСтраницаДвоичныеДанные;
	Иначе
		НоваяСтраница = Элементы.ГруппаИсторияЗапросовТелоЗапросаСтраницаФайл;
	КонецЕсли;

	Элементы.ГруппаИсторияЗапросовТелоЗапросаСтраницы.ТекущаяСтраница = НоваяСтраница;

	Если ЭтоАдресВременногоХранилища(ТекДанные.АдресТелаОтветаСтрокой) Тогда
		ТелоОтветаСтрокой = ПолучитьИзВременногоХранилища(ТекДанные.АдресТелаОтветаСтрокой);
	Иначе
		ТелоОтветаСтрокой = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсторияЗапросовТелоЗапросаИмяФайлаОткрытие(Элемент,
		СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ТекДанные = Элементы.ИсторияЗапросов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЗапуститьПриложение(ТекДанные.ТелоЗапросаИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеЗаголовковТаблицейПриИзменении(Элемент)
	УстановитьСтраницуРедактированияЗаголовковЗапроса();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаголовковЗапросаКлючАвтоПодбор(Элемент, Текст, ДанныеВыбора,
		ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если Не ЗначениеЗаполнено(Текст) Тогда
		Возврат;
	КонецЕсли;

	ДанныеВыбора = Новый СписокЗначений;

	Для Каждого ЭлементСписка Из СписокИспользованныхЗаголовков Цикл
		Если СтрНайти(НРег(ЭлементСписка.Значение), НРег(Текст)) > 0 Тогда
			ДанныеВыбора.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВидТелаЗапросаПриИзменении(Элемент)
	ТолькоПросмотрГруппыПараметровСтроковогоТела = Истина;

	Если ВидТелаЗапроса = "Строкой" Тогда
		НоваяСтраница = Элементы.ГруппаСтраницаТелаЗапросаСтрокой;
		ТолькоПросмотрГруппыПараметровСтроковогоТела = Ложь;
	ИначеЕсли ВидТелаЗапроса = "ДвоичныеДанные" Тогда
		НоваяСтраница = Элементы.ГруппаСтраницаТелаЗапросаДвоичныеДанные;
	Иначе
		НоваяСтраница = Элементы.ГруппаСтраницаТелаЗапросаИмяФайлаТела;
	КонецЕсли;

	Элементы.ГруппаСтраницыТелаЗапроса.ТекущаяСтраница = НоваяСтраница;
	Элементы.ГруппаСвойстваСтроковогоТелаЗапроса.ТолькоПросмотр = ТолькоПросмотрГруппыПараметровСтроковогоТела;
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаТелаЗапросаНачалоВыбора(Элемент, ДанныеВыбора,
		СтандартнаяОбработка)
	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.МножественныйВыбор = Ложь;
	ДВФ.ПолноеИмяФайла = ИмяФайлаТелаЗапроса;

	ДВФ.Показать(Новый ОписаниеОповещения("ИмяФайлаТелаЗапросаНачалоВыбораЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ЗапросHTTPПриИзменении(Элемент)
	УстановитьДоступностьТелаЗапроса(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	Если ВидТелаЗапроса = "Файл" Тогда
		АдресФайлаТелаЗапроса = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайлаТелаЗапроса), АдресФайлаТелаЗапроса);
	КонецЕсли;
	ВыполнитьЗапросНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДвоичныеДанныеТелаИзФайла(Команда)
	НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗаполнитьДвоичныеДанныеТелаИзФайлаЗавершение", ЭтотОбъект), АдресДвоичныхДанныхТелаЗапроса, "", Истина, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДвоичныеДанныеТелаЗапросаИзИстории(Команда)
	ТекДанныеИсторииЗапроса = Элементы.ИсторияЗапросов.ТекущиеДанные;
	Если ТекДанныеИсторииЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не ЭтоАдресВременногоХранилища(ТекДанныеИсторииЗапроса.ТелоЗапросаАдресДвоичныхДанных) Тогда
		Возврат;
	КонецЕсли;

	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДВФ.МножественныйВыбор = Ложь;

	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(, ТекДанныеИсторииЗапроса.ТелоЗапросаАдресДвоичныхДанных));

	НачатьПолучениеФайлов(Новый ОписаниеОповещения("СохранитьДвоичныеДанныеТелаЗапросаИзИсторииПриЗавершении", ЭтотОбъект), ПолучаемыеФайлы, ДВФ, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьТелоОтветаДвоичныеДанныеВФайл(Команда)
	ТекДанныеИсторииЗапроса = Элементы.ИсторияЗапросов.ТекущиеДанные;
	Если ТекДанныеИсторииЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не ЭтоАдресВременногоХранилища(ТекДанныеИсторииЗапроса.ТелоОтветаАдресДвоичныхДанных) Тогда
		Возврат;
	КонецЕсли;

	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДВФ.МножественныйВыбор = Ложь;

	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(, ТекДанныеИсторииЗапроса.ТелоОтветаАдресДвоичныхДанных));

	НачатьПолучениеФайлов(Новый ОписаниеОповещения("СохранитьДвоичныеДанныеТелаЗапросаИзИсторииПриЗавершении", ЭтотОбъект), ПолучаемыеФайлы, ДВФ, Истина);
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеЗапроса

&НаСервере
Функция ПодготовленноеСоединение(СтруктураURL)
	Порт = Неопределено;
	Если ЗначениеЗаполнено(СтруктураURL.Порт) Тогда
		Порт = СтруктураURL.Порт;
	КонецЕсли;
	Если НРег(СтруктураURL.Схема) = "https" Тогда
		СоединениеHTTP = Новый HTTPСоединение(СтруктураURL.Сервер, Порт, , , , 30, Новый ЗащищенноеСоединениеOpenSSL);
	Иначе
		СоединениеHTTP = Новый HTTPСоединение(СтруктураURL.Сервер, Порт, , , , 30);
	КонецЕсли;

	Возврат СоединениеHTTP;
КонецФункции

&НаСервере
Функция ПодготовленныйЗапросHTTP(СтруктураURL)
	НовыйЗапрос = Новый HTTPЗапрос;

	СтрокаЗапроса = СтруктураURL.Путь;

	СтрокаПараметров = "";
	Для Каждого КлючЗначение ИЗ СтруктураURL.ПараметрыЗапроса Цикл
		СтрокаПараметров = СтрокаПараметров
			+ ?(ЗначениеЗаполнено(СтрокаПараметров), "?", "&") + КлючЗначение.Ключ + "="
			+ КлючЗначение.Значение;
	КонецЦикла;

	НовыйЗапрос.АдресРесурса = СтрокаЗапроса + СтрокаПараметров;
	Если Не ЗапросБезТелаЗапроса(ЗапросHTTP) Тогда
		Если ВидТелаЗапроса = "Строкой" Тогда
			Если ЗначениеЗаполнено(ТелоЗапроса) Тогда
				Если ИспользоватьBOM = 0 Тогда
					БОМ = ИспользованиеByteOrderMark.Авто;
				ИначеЕсли (ИспользоватьBOM = 1) Тогда
					БОМ = ИспользованиеByteOrderMark.Использовать;
				Иначе
					БОМ = ИспользованиеByteOrderMark.НеИспользовать;
				КонецЕсли;

				Если КодировкаТелаЗапроса = "Авто" Тогда
					НовыйЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, , БОМ);
				Иначе

					НовыйЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, КодировкаТелаЗапроса, БОМ);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ВидТелаЗапроса = "ДвоичныеДанные" Тогда
			ДвоичныеДанныеТела = ПолучитьИзВременногоХранилища(АдресДвоичныхДанныхТелаЗапроса);
			Если ТипЗнч(ДвоичныеДанныеТела) = Тип("ДвоичныеДанные") Тогда
				НовыйЗапрос.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанныеТела);
			КонецЕсли;
		Иначе
			ДвоичныеДанныеТела = ПолучитьИзВременногоХранилища(АдресФайлаТелаЗапроса);
			Если ТипЗнч(ДвоичныеДанныеТела) = Тип("ДвоичныеДанные") Тогда
				Файл = Новый Файл(ИмяФайлаТелаЗапроса);
				ВременныйФайл = ПолучитьИмяВременногоФайла(Файл.Расширение);
				ДвоичныеДанныеТела.Записать(ВременныйФайл);

				НовыйЗапрос.УстановитьИмяФайлаТела(ВременныйФайл);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	//Теперь нужно установить заголовки запроса
	Если РедактированиеЗаголовковТаблицей Тогда
		Заголовки = Новый Соответствие;

		Для Каждого СтрокаЗаголовка Из ТаблицаЗаголовковЗапроса Цикл
			Заголовки.Вставить(СтрокаЗаголовка.Ключ, СтрокаЗаголовка.Значение);
		КонецЦикла;
	Иначе
		Заголовки = УИ_ОбщегоНазначенияКлиентСервер.ЗаголовкиHTTPЗапросаИзСтроки(ЗаголовкиСтрока);
	КонецЕсли;

	НовыйЗапрос.Заголовки = Заголовки;

	Возврат НовыйЗапрос;
КонецФункции

&НаСервере
Процедура ВыполнитьЗапросНаСервере()
	СтруктураURL = УИ_КоннекторHTTP.РазобратьURL(URLЗапроса);

	СоединениеHTTP = ПодготовленноеСоединение(СтруктураURL);

	НачалоВыполнения = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Запрос = ПодготовленныйЗапросHTTP(СтруктураURL);
	ДатаНачала = ТекущаяДата();
	Попытка
		Если ЗапросHTTP = "GET" Тогда
			Ответ = СоединениеHTTP.Получить(Запрос);
		ИначеЕсли ЗапросHTTP = "POST" Тогда
			Ответ = СоединениеHTTP.ОтправитьДляОбработки(Запрос);
		ИначеЕсли ЗапросHTTP = "DELETE" Тогда
			Ответ = СоединениеHTTP.Удалить(Запрос);
		ИначеЕсли ЗапросHTTP = "PUT" Тогда
			Ответ = СоединениеHTTP.Записать(Запрос);
		ИначеЕсли ЗапросHTTP = "PATCH" Тогда
			Ответ = СоединениеHTTP.Изменить(Запрос);
		Иначе
			Возврат;
		КонецЕсли;
	Исключение

	КонецПопытки;

	ОкончаниеВыполнения = ТекущаяУниверсальнаяДатаВМиллисекундах();

	ДлительностьВМилисекундах = ОкончаниеВыполнения - НачалоВыполнения;

	ЗафиксироватьЛогЗапроса(СтруктураURL.Сервер, СтруктураURL.Схема, Запрос, Ответ, ДатаНачала, ДлительностьВМилисекундах);

	ДополнитьСписокИспользованныхРанееЗаголовков(Запрос.Заголовки);
КонецПроцедуры

&НаСервере
Процедура ДополнитьСписокИспользованныхРанееЗаголовков(Заголовки)
	Для Каждого КлючЗначение Из Заголовки Цикл
		Если СписокИспользованныхЗаголовков.НайтиПоЗначению(КлючЗначение.Ключ) = Неопределено Тогда
			СписокИспользованныхЗаголовков.Добавить(КлючЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗафиксироватьЛогЗапроса(АдресСервера, Протокол, HTTPЗапрос,
		HTTPОтвет, ДатаНачала, Длительность)

		//	Если HTTPОтвет = Неопределено Тогда 
	//		Ошибка = Истина;
	//	Иначе 
	//		Ошибка=Не ПроверитьУспешностьВыполненияЗапроса(HTTPОтвет);//.КодСостояния<>КодУспешногоЗапроса;
	//	КонецЕсли;
	ЗаписьЛога = ИсторияЗапросов.Добавить();
	ЗаписьЛога.URL = URLЗапроса;

	ЗаписьЛога.HTTPФункция = ЗапросHTTP;
	ЗаписьЛога.АдресСервера = АдресСервера;
	ЗаписьЛога.Дата = ДатаНачала;
	ЗаписьЛога.ДлительностьВыполнения = Длительность;
	ЗаписьЛога.Запрос = HTTPЗапрос.АдресРесурса;
	ЗаписьЛога.ЗаголовкиЗапроса = УИ_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуЗаголовковHTTP(HTTPЗапрос.Заголовки);
	ЗаписьЛога.BOM = ИспользоватьBOM;
	ЗаписьЛога.КодировкаТелаЗапроса = КодировкаТелаЗапроса;
	ЗаписьЛога.ВидТелаЗапроса = ВидТелаЗапроса;

	ЗаписьЛога.ТелоЗапросаСтрока = HTTPЗапрос.ПолучитьТелоКакСтроку();

	ДвоичныеДанныеТела = HTTPЗапрос.ПолучитьТелоКакДвоичныеДанные();
	ЗаписьЛога.ТелоЗапросаАдресДвоичныхДанных = ПоместитьВоВременноеХранилище(ДвоичныеДанныеТела, УникальныйИдентификатор);
	ЗаписьЛога.ТелоЗапросаДвоичныеДанныеСтрокой = Строка(ДвоичныеДанныеТела);
	ЗаписьЛога.ТелоЗапросаИмяФайла = ИмяФайлаТелаЗапроса;
	ЗаписьЛога.Протокол = Протокол;

	ЗаписьЛога.КодСостояния = ?(HTTPОтвет = Неопределено, 500, HTTPОтвет.КодСостояния);

	Если HTTPОтвет = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЗаписьЛога.ЗаголовкиОтвета = УИ_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуЗаголовковHTTP(HTTPОтвет.Заголовки);

	ТелоОтветаСтрокойЛог = HTTPОтвет.ПолучитьТелоКакСтроку();
	Если ЗначениеЗаполнено(ТелоОтветаСтрокойЛог) Тогда
		Если НайтиНедопустимыеСимволыXML(ТелоОтветаСтрокойЛог) = 0 Тогда
			ЗаписьЛога.АдресТелаОтветаСтрокой = ПоместитьВоВременноеХранилище(ТелоОтветаСтрокойЛог, УникальныйИдентификатор);
		Иначе
			ЗаписьЛога.АдресТелаОтветаСтрокой = ПоместитьВоВременноеХранилище("Содержит недопустимые символы XML", УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	ДвоичныеДанныеОтвета = HTTPОтвет.ПолучитьТелоКакДвоичныеДанные();
	Если ДвоичныеДанныеОтвета <> Неопределено Тогда
		ЗаписьЛога.ТелоОтветаАдресДвоичныхДанных = ПоместитьВоВременноеХранилище(ДвоичныеДанныеОтвета, УникальныйИдентификатор);
		ЗаписьЛога.ТелоОтветаДвоичныеДанныеСтрокой = Строка(ДвоичныеДанныеОтвета);
	КонецЕсли;

	ИмяФайлаОтвета = HTTPОтвет.ПолучитьИмяФайлаТела();
	Если ИмяФайлаОтвета <> Неопределено Тогда
		Файл = Новый Файл(ИмяФайлаОтвета);
		Если Файл.Существует() Тогда
			ДвоичныеДанныеОтвета = Новый ДвоичныеДанные(ИмяФайлаОтвета);
			ЗаписьЛога.ТелоОтветаАдресДвоичныхДанных = ПоместитьВоВременноеХранилище(ДвоичныеДанныеОтвета, УникальныйИдентификатор);
			ЗаписьЛога.ТелоОтветаДвоичныеДанныеСтрокой = Строка(ДвоичныеДанныеОтвета);

		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьДвоичныеДанныеТелаЗапросаИзИсторииПриЗавершении(ПолученныеФайлы,
		ДополнительныеПараметры) Экспорт
	Если ПолученныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗапросБезТелаЗапроса(ВидЗапросаHTTP)
	МассивЗапросовБезТела = Новый Массив;
	МассивЗапросовБезТела.Добавить("GET");
	МассивЗапросовБезТела.Добавить("DELETE");

	Возврат МассивЗапросовБезТела.Найти(ВРег(ВидЗапросаHTTP)) <> Неопределено;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьТелаЗапроса(Форма)
	Форма.Элементы.ГруппаТелоЗапроса.ТолькоПросмотр = ЗапросБезТелаЗапроса(Форма.ЗапросHTTP);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДвоичныеДанныеТелаИзФайлаЗавершение(Результат, Адрес,
		ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;

	АдресДвоичныхДанныхТелаЗапроса = Адрес;

	ТелоЗапросаДвоичныеДанныеСтрокой = Строка(ПолучитьИзВременногоХранилища(Адрес));
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаТелаЗапросаНачалоВыбораЗавершение(ВыбранныеФайлы,
		ДополнительныеПараметры) Экспорт

	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ИмяФайлаТелаЗапроса = ВыбранныеФайлы[0];
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЗаголовковПоСтроке(СтрокаЗаголовков)
	ЗаголовкиПоСтроке = УИ_ОбщегоНазначенияКлиентСервер.ЗаголовкиHTTPЗапросаИзСтроки(СтрокаЗаголовков);

	ТаблицаЗаголовковЗапроса.Очистить();

	Для каждого КлючЗначение Из ЗаголовкиПоСтроке Цикл
		НС = ТаблицаЗаголовковЗапроса.Добавить();
		НС.Ключ = КлючЗначение.Ключ;
		НС.Значение = КлючЗначение.Значение;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРедактированияЗаголовковЗапроса()
	Если РедактированиеЗаголовковТаблицей Тогда
		НоваяСтраница = Элементы.ГруппаСтраницаРедактированияЗаголовковЗапросаТаблицей;
	Иначе
		НоваяСтраница = Элементы.ГруппаСтраницаРедактированияЗаголовковЗапросаТекстом;
	КонецЕсли;

	Элементы.ГруппаСраницыРедактированияЗаголовковЗапроса.ТекущаяСтраница = НоваяСтраница;

	//Теперь нужно заполнить заголовки на новой странице по старой странице
	Если РедактированиеЗаголовковТаблицей Тогда
		ЗаполнитьТаблицуЗаголовковПоСтроке(ЗаголовкиСтрока);
	Иначе
		ЗаголовкиСтрока = УИ_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуЗаголовковHTTP(ТаблицаЗаголовковЗапроса);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеТекущегоЗапросаПоИстории(ВыбраннаяСтрока)

//Нужно установить текущую строку в параметры выполнения запроса
	ТекДанные = ИсторияЗапросов.НайтиПоИдентификатору(ВыбраннаяСтрока);

	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЗапросHTTP = ТекДанные.HTTPФункция;
	URLЗапроса = ТекДанные.URL;
	ЗаголовкиСтрока = ТекДанные.ЗаголовкиЗапроса;
	ТелоЗапроса = ТекДанные.ТелоЗапросаСтрока;
	КодировкаТелаЗапроса = ТекДанные.КодировкаТелаЗапроса;
	ИспользоватьBOM = ТекДанные.BOM;
	ВидТелаЗапроса = ТекДанные.ВидТелаЗапроса;
	ВидТелаЗапросаПриИзменении(Элементы.ВидТелаЗапроса);
	ИмяФайлаТелаЗапроса = ТекДанные.ТелоЗапросаИмяФайла;

	Если ЭтоАдресВременногоХранилища(ТекДанные.ТелоЗапросаАдресДвоичныхДанных) Тогда
		ДвоичныеДанныеТелаЗапроса = ПолучитьИзВременногоХранилища(ТекДанные.ТелоЗапросаАдресДвоичныхДанных);
		ТелоЗапросаДвоичныеДанныеСтрокой = Строка(ДвоичныеДанныеТелаЗапроса);
		Если ТипЗнч(ДвоичныеДанныеТелаЗапроса) = Тип("ДвоичныеДанные") Тогда
			АдресДвоичныхДанныхТелаЗапроса = ПоместитьВоВременноеХранилище(ДвоичныеДанныеТелаЗапроса, АдресДвоичныхДанныхТелаЗапроса);
		КонецЕсли;
	КонецЕсли;

	ТаблицаЗаголовковЗапроса.Очистить();
	Если РедактированиеЗаголовковТаблицей Тогда
		ЗаполнитьТаблицуЗаголовковПоСтроке(ЗаголовкиСтрока);
	КонецЕсли;

	Элементы.ГруппаСтраницыЗапроса.ТекущаяСтраница = Элементы.ГруппаЗапрос;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымОтладки(АдресДанныхОтладки)
	ДанныеДляОтладки = ПолучитьИзВременногоХранилища(АдресДанныхОтладки);

	URLЗапроса = "";
	Если Не ЗначениеЗаполнено(ДанныеДляОтладки.Протокол) Тогда
		URLЗапроса = "http";
	Иначе
		URLЗапроса = ДанныеДляОтладки.Протокол;
	КонецЕсли;

	URLЗапроса = URLЗапроса + "://" + ДанныеДляОтладки.АдресСервера;

	Если ЗначениеЗаполнено(ДанныеДляОтладки.Порт) Тогда
		URLЗапроса = URLЗапроса + ":" + Формат(ДанныеДляОтладки.Порт, "ЧГ=0;");
	КонецЕсли;

	Если Не СтрНачинаетсяС(ДанныеДляОтладки.Запрос, "/") Тогда
		URLЗапроса = URLЗапроса + "/";
	КонецЕсли;

	URLЗапроса = URLЗапроса + ДанныеДляОтладки.Запрос;
	РедактированиеЗаголовковТаблицей = Истина;

	Элементы.ГруппаСраницыРедактированияЗаголовковЗапроса.ТекущаяСтраница = Элементы.ГруппаСтраницаРедактированияЗаголовковЗапросаТаблицей;

	Заголовки = ДанныеДляОтладки.Заголовки;

	//Удаляем неиспользуемые символы из строки заголовков
	ПозицияСимвола = НайтиНедопустимыеСимволыXML(Заголовки);
	Пока ПозицияСимвола > 0 Цикл
		Если ПозицияСимвола = 1 Тогда
			Заголовки = Сред(Заголовки, 2);
		ИначеЕсли ПозицияСимвола = СтрДлина(Заголовки) Тогда
			Заголовки = Лев(Заголовки, СтрДлина(Заголовки) - 1);
		Иначе
			НовыеЗаголовки = Лев(Заголовки, ПозицияСимвола - 1)
				+ Сред(Заголовки, ПозицияСимвола + 1);
			Заголовки = НовыеЗаголовки;
		КонецЕсли;

		ПозицияСимвола = НайтиНедопустимыеСимволыXML(Заголовки);
	КонецЦикла;

	ЗаполнитьТаблицуЗаголовковПоСтроке(Заголовки);

	Если ДанныеДляОтладки.ТелоЗапроса = Неопределено Тогда
		ТелоЗапроса = "";
	Иначе
		ТелоЗапроса = ДанныеДляОтладки.ТелоЗапроса;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
