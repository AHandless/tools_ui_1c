
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПустоеОписаниеРеквизитовОбъекта();

	Если Параметры.Свойство("Объект") Тогда
		РедактируемыйОбъект = Параметры.Объект;
		ЗаполнитьФормуПоОбъекту();
	ИначеЕсли Параметры.Свойство("ДанныеОтладки") Тогда
		ЗаполнитьОбъектПоДаннымОтладки(Параметры.ДанныеОтладки);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения,
		СтандартнаяОбработка)

	Если Модифицированность Тогда
		Отказ = Истина;
		ОписаниеОповщения = Новый ОписаниеОповещения("ПередЗакрытиемЗаписатьПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповщения, "Записать сделанные изменения перед закрытием?", РежимДиалогаВопрос.ДаНетОтмена, 15, КодВозвратаДиалога.Да, , КодВозвратаДиалога.Отмена);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗаписатьПослеОтветаНаВопрос(РезультатВопроса,
		ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьНаСервере();
	КонецЕсли;
	Если РезультатВопроса <> КодВозвратаДиалога.Отмена Тогда
		Модифицированность = Ложь;

		Закрыть();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВыбранныйОбъектПриИзменении(Элемент)
	ЗаполнитьФормуПоОбъекту();
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ТабличнаяЧастьПриИзменении(Элемент)
// Нужно пересчитать номера строк табличной части
	Номер = 1;
	Для Каждого СтрокаТЧ Из ЭтотОбъект[Элемент.Имя] Цикл
		СтрокаТЧ.НомерСтроки = Номер;

		Номер = Номер + 1;
	КонецЦикла;

КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ТабличнаяЧастьПриНачалеРедактирования(Элемент,
		НоваяСтрока, Копирование)
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если НоваяСтрока Тогда
		ТекДанные.НомерСтроки = ЭтотОбъект[Элемент.Имя].Количество();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбрабатыватьДвиженияПриИзменении(Элемент)
	ПрочитатьДвиженияДокумента();
	УстановитьВидимостьЗакладкиДвижений();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перечитать(Команда)
	ЗаполнитьДанныеОбъектаНаФорме();
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЧтениеДанныхОбъекта

&НаСервере
Процедура ЗаполнитьДанныеШапкиОбъектаНаФорме()
	Для Каждого Реквизит Из РеквизитыОбъекта.Реквизиты Цикл
		Если ВРег(Реквизит.Имя) = "ССЫЛКА" Тогда
			ЭтотОбъект[Реквизит.ИмяРеквизитаФормы] = РедактируемыйОбъект[Реквизит.Имя].УникальныйИдентификатор();
		Иначе
			ЭтотОбъект[Реквизит.ИмяРеквизитаФормы] = РедактируемыйОбъект[Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеТабличнойЧастиОбъектаНаФорме(ТекТабличнаяЧасть)
	ТЧОБъекта = РедактируемыйОбъект[ТекТабличнаяЧасть.Имя];

	ТаблицаФормы = ЭтотОбъект[ТекТабличнаяЧасть.ИмяРеквизитаФормы];
	ТаблицаФормы.Очистить();

	Для Каждого СтрокаТЧ Из ТЧОБъекта Цикл
		НоваяСтрока = ТаблицаФормы.Добавить();

		Для Каждого РеквизитТЧ Из ТекТабличнаяЧасть.Реквизиты Цикл
			НоваяСтрока[РеквизитТЧ.ИмяРеквизитаФормы] = СтрокаТЧ[РеквизитТЧ.Имя];

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеТабличныйЧастейОбъектаНаФорме()
	Для каждого ТекТабличнаяЧасть Из РеквизитыОбъекта.ТабличныеЧасти Цикл
		ЗаполнитьДанныеТабличнойЧастиОбъектаНаФорме(ТекТабличнаяЧасть);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОбъектаНаФорме()
	Если НЕ ЗначениеЗаполнено(РедактируемыйОбъект) Тогда
		Возврат;
	КонецЕсли;

	ЗаполнитьДанныеШапкиОбъектаНаФорме();
	ЗаполнитьДанныеТабличныйЧастейОбъектаНаФорме();
	ПрочитатьДвиженияДокумента();
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСпецифическиеРеквизитыДвиженияРегистраБухгалтерии(ОписаниеРегистра,
		СтрокаТаблицыФормы, ЗаписьРегистра, МассивПропускаемыхРеквизитов)
	СоответствиеСчетовИВидовСубконто = Новый Соответствие;
	Если ОписаниеРегистра.Корреспонденция Тогда
		СоответствиеСчетовИВидовСубконто.Вставить("СчетДт", "СубконтоДт");
		СоответствиеСчетовИВидовСубконто.Вставить("СчетКт", "СубконтоКт");
	Иначе
		СоответствиеСчетовИВидовСубконто.Вставить("Счет", "Субконто");
	КонецЕсли;

	Для Каждого КлючЗначение Из СоответствиеСчетовИВидовСубконто Цикл
		Для НомерСубконто = 1 По ОписаниеРегистра.МаксКоличествоСубконто Цикл

			МассивПропускаемыхРеквизитов.Добавить(ВРег(КлючЗначение.Значение
				+ НомерСубконто));
		КонецЦикла;

		Для Каждого СтрокаВидаСубконто Из ЗаписьРегистра[КлючЗначение.Ключ].ВидыСубконто Цикл
			СтрокаТаблицыФормы[КлючЗначение.Значение
				+ СтрокаВидаСубконто.НомерСтроки] = ЗаписьРегистра[КлючЗначение.Значение][СтрокаВидаСубконто.ВидСубконто];

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьДвиженияРегистра(ОписаниеРегистра, ТаблицаФормы)
	НаборЗаписей = НаборЗаписейРегистраДвижений(ОписаниеРегистра);
	НаборЗаписей.Прочитать();

	ЭтоРегистрБухгалтерии = ВРег(ОписаниеРегистра.ТипРегистра) = "РЕГИСТРБУХГАЛТЕРИИ";

	Для Каждого Запись Из НаборЗаписей Цикл
		НоваяСтрока = ТаблицаФормы.Добавить();

		МассивПропускаемыхРеквизитов = Новый Массив;

		Если ЭтоРегистрБухгалтерии Тогда
			ПрочитатьСпецифическиеРеквизитыДвиженияРегистраБухгалтерии(ОписаниеРегистра, НоваяСтрока, Запись, МассивПропускаемыхРеквизитов);
		КонецЕсли;

		Для Каждого ТекР Из ОписаниеРегистра.Реквизиты Цикл
			Если МассивПропускаемыхРеквизитов.Найти(ВРег(ТекР.Имя)) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;

			НоваяСтрока[ТекР.ИмяРеквизитаФормы] = Запись[ТекР.Имя];
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьДвиженияДокумента()
	Если Не ЭтоДокумент Тогда
		Возврат;
	КонецЕсли;

	Для Каждого ОписаниеРегистра Из РеквизитыОбъекта.Движения Цикл
		ТаблицаФормы = ЭтотОбъект[ОписаниеРегистра.ИмяРеквизитаФормы];
		ТаблицаФормы.Очистить();

		Если Не ОбрабатыватьДвижения Тогда
			Продолжить;
		КонецЕсли;

		ПрочитатьДвиженияРегистра(ОписаниеРегистра, ТаблицаФормы);

	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеРеквизитовФормы

&НаСервере
Процедура УстановитьПустоеОписаниеРеквизитовОбъекта()
	РеквизитыОбъекта = Новый Структура;
	РеквизитыОбъекта.Вставить("Реквизиты", Новый Массив);
	РеквизитыОбъекта.Вставить("ТабличныеЧасти", Новый Массив);
	РеквизитыОбъекта.Вставить("Движения", Новый Массив);

КонецПроцедуры

&НаСервере
Процедура УдалитьДобавленныеРеквизитыФормы()
	МассивУдаляемыхРеквизитов = Новый Массив;
	Для Каждого Реквизит Из РеквизитыОбъекта.Реквизиты Цикл
		МассивУдаляемыхРеквизитов.Добавить(Реквизит.ИмяРеквизитаФормы);
	КонецЦикла;

	Для Каждого Реквизит Из РеквизитыОбъекта.ТабличныеЧасти Цикл
		МассивУдаляемыхРеквизитов.Добавить(Реквизит.ИмяРеквизитаФормы);
	КонецЦикла;

	Для Каждого Реквизит Из РеквизитыОбъекта.Движения Цикл
		МассивУдаляемыхРеквизитов.Добавить(Реквизит.ИмяРеквизитаФормы);
	КонецЦикла;

	ИзменитьРеквизиты(, МассивУдаляемыхРеквизитов);

	УстановитьПустоеОписаниеРеквизитовОбъекта();
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитВКоллекциюРеквизитов(КоллекцияРеквизитов, Имя, Тип,
		Заголовок, ИмяРеквизитаФормы, ПредставлениеГруппыРеквизитов = "Реквизиты",
		Балансовый = Ложь)
	НовыйРеквизит = Новый Структура;
	НовыйРеквизит.Вставить("Имя", Имя);
	НовыйРеквизит.Вставить("Тип", Тип);
	НовыйРеквизит.Вставить("Заголовок", Заголовок);
	НовыйРеквизит.Вставить("ИмяРеквизитаФормы", ИмяРеквизитаФормы);
	НовыйРеквизит.Вставить("ГруппаРеквизитов", СтрЗаменить(ПредставлениеГруппыРеквизитов, " ", ""));
	НовыйРеквизит.Вставить("ПредставлениеГруппыРеквизитов", ПредставлениеГруппыРеквизитов);
	НовыйРеквизит.Вставить("Балансовый", Балансовый);

	РеквизитыДОбавляемыеВНачало = Новый Массив;
	РеквизитыДОбавляемыеВНачало.Добавить("НОМЕРСТРОКИ");

	Если РеквизитыДОбавляемыеВНачало.Найти(ВРег(имя)) = Неопределено Тогда
		КоллекцияРеквизитов.Добавить(НовыйРеквизит);
	Иначе
		КоллекцияРеквизитов.Вставить(0, НовыйРеквизит);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТабличнуюЧастьВКоллекциюРеквизитов(Коллекция, Имя, Заголовок,
		ИмяРеквизитаФормы)
	Описание = Новый Структура;
	Описание.Вставить("Имя", Имя);
	Описание.Вставить("Заголовок", Заголовок);
	Описание.Вставить("ИмяРеквизитаФормы", ИмяРеквизитаФормы);
	Описание.Вставить("Реквизиты", Новый Массив);

	Коллекция.Добавить(Описание);

КонецПроцедуры

&НаСервере
Функция ОписаниеРегистраДвиженийДокумента(МетаданныеРегистра)
	ОписаниеРегистра = Новый Структура;
	ОписаниеРегистра.Вставить("Имя", МетаданныеРегистра.Имя);
	ОписаниеРегистра.Вставить("Заголовок", МетаданныеРегистра.Синоним);
	Если Не ЗначениеЗаполнено(ОписаниеРегистра.Заголовок) Тогда
		ОписаниеРегистра.Вставить("Заголовок", МетаданныеРегистра.Имя);
	КонецЕсли;

	Если УИ_ОбщегоНазначения.ЭтоРегистрБухгалтерии(МетаданныеРегистра) Тогда
		ОписаниеРегистра.Вставить("ТипРегистра", "РегистрБухгалтерии");
		ОписаниеРегистра.Вставить("Корреспонденция", МетаданныеРегистра.Корреспонденция);
		ОписаниеРегистра.Вставить("МаксКоличествоСубконто", МетаданныеРегистра.ПланСчетов.МаксКоличествоСубконто);
	ИначеЕсли УИ_ОбщегоНазначения.ЭтоРегистрНакопления(МетаданныеРегистра) Тогда
		ОписаниеРегистра.Вставить("ТипРегистра", "РегистрНакопления");
	ИначеЕсли УИ_ОбщегоНазначения.ЭтоРегистрСведений(МетаданныеРегистра) Тогда
		ОписаниеРегистра.Вставить("ТипРегистра", "РегистрСведений");
	ИначеЕсли УИ_ОбщегоНазначения.ЭтоРегистрРасчета(МетаданныеРегистра) Тогда
		ОписаниеРегистра.Вставить("ТипРегистра", "РегистрРасчета");
	Иначе
		Возврат Неопределено;
	КонецЕсли;

	ОписаниеРегистра.Вставить("ИмяРеквизитаФормы", ""
		+ ОписаниеРегистра.ТипРегистра + "_" + МетаданныеРегистра.Имя);
	ОписаниеРегистра.Вставить("Реквизиты", Новый Массив);
	Возврат ОписаниеРегистра;
КонецФункции

&НаСервере
Процедура ДобавитьРеквизитыСубконтоРегистраДвиженияВДобавляемыеРеквизитыФормы(ЭтоРегистрБухгалтерии,
		МассивДобавляемыхРеквизитов, РегистрМетаданные, ОписаниеРегистра)

	Если Не ЭтоРегистрБухгалтерии Тогда
		Возврат;
	КонецЕсли;

	// Субконто
	Для НомерСубконто = 1 По РегистрМетаданные.ПланСчетов.МаксКоличествоСубконто Цикл
		Если РегистрМетаданные.Корреспонденция Тогда
			ТекИмя = "Субконто";
			ТекСиноним = "Субконто";

			ИмяРеквизита = ТекИмя + "Дт" + НомерСубконто;

			НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, РегистрМетаданные.ПланСчетов.ВидыСубконто.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекСиноним
				+ НомерСубконто + "(Дт)", Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , Ложь);

			ИмяРеквизита = ТекИмя + "Кт" + НомерСубконто;

			НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, РегистрМетаданные.ПланСчетов.ВидыСубконто.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекСиноним
				+ НомерСубконто + "(Кт)", Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , Ложь);
		Иначе
			ТекИмя = "Субконто";
			ТекСиноним = "Субконто";

			ИмяРеквизита = ТекИмя + НомерСубконто;

			НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, РегистрМетаданные.ПланСчетов.ВидыСубконто.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекСиноним
				+ НомерСубконто, Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , Ложь);

		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыСчетовРегистраДвиженияВДобавляемыеРеквизитыФормы(ЭтоРегистрБухгалтерии,
		МассивДобавляемыхРеквизитов, РегистрМетаданные, ОписаниеРегистра)

	Если Не ЭтоРегистрБухгалтерии Тогда
		Возврат;
	КонецЕсли;

	Если Не РегистрМетаданные.Корреспонденция Тогда
		Возврат;
	КонецЕсли;

	// Счет Дт и КТ
	ТекИмя = "Счет";
	ТекСиноним = "Счет";

	ИмяРеквизита = ТекИмя + "Дт";

	НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ПланСчетовСсылка."
		+ РегистрМетаданные.ПланСчетов.Имя), ОписаниеРегистра.ИмяРеквизитаФормы, ТекСиноним
		+ "(Дт)", Истина);
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

	ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , Ложь);

	ИмяРеквизита = ТекИмя + "Кт";

	НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ПланСчетовСсылка."
		+ РегистрМетаданные.ПланСчетов.Имя), ОписаниеРегистра.ИмяРеквизитаФормы, ТекСиноним
		+ "(Кт)", Истина);
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

	ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , Ложь);

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыРегистраДвиженияВДобавляемыеРеквизитыФормы(МассивДобавляемыхРеквизитов,
		ОписаниеРегистра, РегистрМетаданные, ЭтоРегистрБухгалтерии,
		МассивСтандартныхРеквизитовНеТребующихДобавления)

		// Стандартные реквизиты
	Для Каждого ТекРеквизит Из РегистрМетаданные.СтандартныеРеквизиты Цикл
		Если МассивСтандартныхРеквизитовНеТребующихДобавления.Найти(ВРег(ТекРеквизит.Имя)) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		НовыйРеквизит = Новый РеквизитФормы(ТекРеквизит.Имя, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним, Истина);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

		ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, ТекРеквизит.Имя, ТекРеквизит.Тип, ТекРеквизит.Синоним, ТекРеквизит.Имя);

	КонецЦикла;

	ДобавитьРеквизитыСчетовРегистраДвиженияВДобавляемыеРеквизитыФормы(ЭтоРегистрБухгалтерии, МассивДобавляемыхРеквизитов, РегистрМетаданные, ОписаниеРегистра);

	// Измерения
	Для Каждого ТекРеквизит Из РегистрМетаданные.Измерения Цикл

		Если ЭтоРегистрБухгалтерии И Не ТекРеквизит.Балансовый
				И РегистрМетаданные.Корреспонденция Тогда
			ИмяРеквизита = ТекРеквизит.Имя + "Дт";

			НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним
				+ "(Дт)", Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , ТекРеквизит.Балансовый);

			ИмяРеквизита = ТекРеквизит.Имя + "Кт";

			НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним
				+ "(Кт)", Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , ТекРеквизит.Балансовый);

		Иначе
			НовыйРеквизит = Новый РеквизитФормы(ТекРеквизит.Имя, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним, Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, ТекРеквизит.Имя, ТекРеквизит.Тип, ТекРеквизит.Синоним, ТекРеквизит.Имя);
		КонецЕсли;
	КонецЦикла;

	ДобавитьРеквизитыСубконтоРегистраДвиженияВДобавляемыеРеквизитыФормы(ЭтоРегистрБухгалтерии, МассивДобавляемыхРеквизитов, РегистрМетаданные, ОписаниеРегистра);

	// Реквизиты
	Для Каждого ТекРеквизит Из РегистрМетаданные.Реквизиты Цикл
		НовыйРеквизит = Новый РеквизитФормы(ТекРеквизит.Имя, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним, Истина);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

		ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, ТекРеквизит.Имя, ТекРеквизит.Тип, ТекРеквизит.Синоним, ТекРеквизит.Имя);

	КонецЦикла;

	// Ресурсы
	Для Каждого ТекРеквизит Из РегистрМетаданные.Ресурсы Цикл
		Если ЭтоРегистрБухгалтерии И Не ТекРеквизит.Балансовый
				И РегистрМетаданные.Корреспонденция Тогда

			ИмяРеквизита = ТекРеквизит.Имя + "Дт";

			НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним
				+ "(Дт)", Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , ТекРеквизит.Балансовый);

			ИмяРеквизита = ТекРеквизит.Имя + "Кт";

			НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним
				+ "(Кт)", Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, НовыйРеквизит.Имя, НовыйРеквизит.ТипЗначения, НовыйРеквизит.Заголовок, НовыйРеквизит.Имя, , ТекРеквизит.Балансовый);

		Иначе
			НовыйРеквизит = Новый РеквизитФормы(ТекРеквизит.Имя, ТекРеквизит.Тип, ОписаниеРегистра.ИмяРеквизитаФормы, ТекРеквизит.Синоним, Истина);
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

			ДобавитьРеквизитВКоллекциюРеквизитов(ОписаниеРегистра.Реквизиты, ТекРеквизит.Имя, ТекРеквизит.Тип, ТекРеквизит.Синоним, ТекРеквизит.Имя);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьНаборыДвиженийДокументаВРеквизитыФормы(МетаданныеОбъекта)
	Если Не ЭтоДокумент Тогда
		Возврат;
	КонецЕсли;

	СоответвиеОписаний = Новый Соответствие;

	МассивДобавляемыхРеквизитов = Новый Массив;
	Для Каждого Регистр Из МетаданныеОбъекта.Движения Цикл
		ОписаниеРегистра = ОписаниеРегистраДвиженийДокумента(Регистр);
		Если ОписаниеРегистра = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		РеквизитыОбъекта.Движения.Добавить(ОписаниеРегистра);
		СоответвиеОписаний.Вставить(ОписаниеРегистра.Имя, ОписаниеРегистра);

		НовыйРеквизит = Новый РеквизитФормы(ОписаниеРегистра.ИмяРеквизитаФормы, Новый ОписаниеТипов("ТаблицаЗначений"), "", ОписаниеРегистра.Заголовок, Истина);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

	КонецЦикла;

	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

	МассивДобавляемыхРеквизитов = Новый Массив;
	// Создаем реквизиты
	Для каждого Регистр Из МетаданныеОбъекта.Движения Цикл
		ОписаниеРегистра = СоответвиеОписаний[Регистр.Имя];

		ЭтоРегистрБухгалтерии = ВРег(ОписаниеРегистра.ТипРегистра) = "РЕГИСТРБУХГАЛТЕРИИ";

		МассивСтандартныхРеквизитовНеТребующихДобавления = Новый Массив;
		Если ЭтоРегистрБухгалтерии Тогда
			Если Регистр.Корреспонденция Тогда
				МассивСтандартныхРеквизитовНеТребующихДобавления.Добавить("СЧЕТ");
			КонецЕсли;

			Для НомерСубконто = 1 По Регистр.ПланСчетов.МаксКоличествоСубконто Цикл
				МассивСтандартныхРеквизитовНеТребующихДобавления.Добавить("ВИДСУБКОНТО"
					+ НомерСубконто);
				МассивСтандартныхРеквизитовНеТребующихДобавления.Добавить("СУБКОНТО"
					+ НомерСубконто);
			КонецЦикла;

		КонецЕсли;

		ДобавитьРеквизитыРегистраДвиженияВДобавляемыеРеквизитыФормы(МассивДобавляемыхРеквизитов, ОписаниеРегистра, Регистр, ЭтоРегистрБухгалтерии, МассивСтандартныхРеквизитовНеТребующихДобавления);
	КонецЦикла;

	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитКДобавлениюНаФорму(КоллекцияРеквизитов,
		ТекРеквизитМетаданных, ПрефиксИмениФормы, МассивДобавляемыхРеквизитов,
		ПредставлениеГруппыРеквизитов, ИмяРеквизитаФормыТЧ = "")

	ИмяРеквизита = ПрефиксИмениФормы + ТекРеквизитМетаданных.Имя;

	Синоним = ТекРеквизитМетаданных.Синоним;
	Если Не ЗначениеЗаполнено(Синоним) Тогда
		Если НРег(ТекРеквизитМетаданных.Имя) = "номерстроки" Тогда
			Синоним = "№";
		Иначе
			Синоним = ТекРеквизитМетаданных.Имя;
		КонецЕсли;
	КонецЕсли;

	ТипРеквизита = ТекРеквизитМетаданных.Тип;
	Если ВРег(ТекРеквизитМетаданных.Имя) = "ССЫЛКА" Тогда
		ТипРеквизита = Новый ОписаниеТипов("Строка");
	КонецЕсли;
	НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, ТипРеквизита, ИмяРеквизитаФормыТЧ, Синоним, Истина);
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

	ДобавитьРеквизитВКоллекциюРеквизитов(КоллекцияРеквизитов, ТекРеквизитМетаданных.Имя, ТекРеквизитМетаданных.Тип, Синоним, ИмяРеквизита, ПредставлениеГруппыРеквизитов);

КонецПроцедуры

&НаСервере
Процедура ДобавитьСтандартныеРеквизитыМетаданногоКДобавлениюНаФорму(МетаданныеОбъекта,
		МассивДобавляемыхРеквизитов)

	Для Каждого ТекРеквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		ДобавитьРеквизитКДобавлениюНаФорму(РеквизитыОбъекта.Реквизиты, ТекРеквизит, "СтандартныйРеквизит_", МассивДобавляемыхРеквизитов, "Стандартные реквизиты");
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыМетаданногоКДобавлениюНаФорму(МетаданныеОбъекта,
		МассивДобавляемыхРеквизитов)

	Для Каждого ТекРеквизит Из МетаданныеОбъекта.Реквизиты Цикл
		ДобавитьРеквизитКДобавлениюНаФорму(РеквизитыОбъекта.Реквизиты, ТекРеквизит, "Реквизит_", МассивДобавляемыхРеквизитов, "Реквизиты");
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьСпецифичныеРеквизитыПланаСчетовКДобавлениюНаФорму(МетаданныеОбъекта,
		МассивДобавляемыхРеквизитов)

	Если Не УИ_ОбщегоНазначения.ЭтоПланСчетов(МетаданныеОбъекта) Тогда
		Возврат;
	КонецЕсли;

	// В реквизиты добавляем признаки учета
	Для Каждого ТекРеквизит Из МетаданныеОбъекта.ПризнакиУчета Цикл
		ДобавитьРеквизитКДобавлениюНаФорму(РеквизитыОбъекта.Реквизиты, ТекРеквизит, "ПризнакУчета_", МассивДобавляемыхРеквизитов, "Признаки учета");
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьСпецифичныеРеквизитыЗадачиКДобавлениюНаФорму(МетаданныеОбъекта,
		МассивДобавляемыхРеквизитов)

	Если Не УИ_ОбщегоНазначения.ЭтоЗадача(МетаданныеОбъекта) Тогда
		Возврат;
	КонецЕсли;

	// В реквизиты добавляем признаки учета
	Для Каждого ТекРеквизит Из МетаданныеОбъекта.РеквизитыАдресации Цикл
		ДобавитьРеквизитКДобавлениюНаФорму(РеквизитыОбъекта.Реквизиты, ТекРеквизит, "РеквизитАдресации_", МассивДобавляемыхРеквизитов, "Реквизиты адресации");
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьТабличнуюЧастьКДобавлениюНаФорму(ТабличнаяЧастьМетаданные,
		ПрефиксИмени, МассивДобавляемыхРеквизитов)

	ИмяРеквизита = "ТабличнаяЧасть_" + ТабличнаяЧастьМетаданные.Имя;

	Синоним = ТабличнаяЧастьМетаданные.Синоним;
	Если Не ЗначениеЗаполнено(Синоним) Тогда
		Синоним = ТабличнаяЧастьМетаданные.Имя;
	КонецЕсли;

	НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТаблицаЗначений"), "", Синоним, Истина);

	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);

	ДобавитьТабличнуюЧастьВКоллекциюРеквизитов(РеквизитыОбъекта.ТабличныеЧасти, ТабличнаяЧастьМетаданные.Имя, Синоним, ИмяРеквизита);

КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыТабличныхЧастейВРеквизитыФормы(МетаданныеОбъекта)
// Добавим реквизиты табличных частей
	МассивДобавляемыхРеквизитов = Новый Массив;

	Для Каждого ОписаниеТабличнойЧасти Из РеквизитыОбъекта.ТабличныеЧасти Цикл

		Если СтрНачинаетсяС(ОписаниеТабличнойЧасти.ИмяРеквизитаФормы, "СтандартнаяТабличнаяЧасть_") Тогда
			ТабличнаяЧасть = МетаданныеОбъекта.СтандартныеТабличныеЧасти[ОписаниеТабличнойЧасти.Имя];
			СтандартнаяТЧ = Истина;
		Иначе
			ТабличнаяЧасть = МетаданныеОбъекта.ТабличныеЧасти[ОписаниеТабличнойЧасти.Имя];
			СтандартнаяТЧ = Ложь;
		КонецЕсли;

		Для Каждого Реквизит Из ТабличнаяЧасть.СтандартныеРеквизиты Цикл
			ДобавитьРеквизитКДобавлениюНаФорму(ОписаниеТабличнойЧасти.Реквизиты, Реквизит, "", МассивДобавляемыхРеквизитов, "Реквизиты", ОписаниеТабличнойЧасти.ИмяРеквизитаФормы);
		КонецЦикла;

		Если УИ_ОбщегоНазначения.ЭтоПланСчетов(МетаданныеОбъекта) Тогда
			Для Каждого ПризнакУчетаСубконто Из МетаданныеОбъекта.ПризнакиУчетаСубконто Цикл
				ДобавитьРеквизитКДобавлениюНаФорму(ОписаниеТабличнойЧасти.Реквизиты, ПризнакУчетаСубконто, "", МассивДобавляемыхРеквизитов, "Реквизиты", ОписаниеТабличнойЧасти.ИмяРеквизитаФормы);
			КонецЦикла;
		КонецЕсли;

		Если СтандартнаяТЧ Тогда
			Продолжить;
		КонецЕсли;

		Для Каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
			ДобавитьРеквизитКДобавлениюНаФорму(ОписаниеТабличнойЧасти.Реквизиты, Реквизит, "", МассивДобавляемыхРеквизитов, "Реквизиты", ОписаниеТабличнойЧасти.ИмяРеквизитаФормы);
		КонецЦикла;
	КонецЦикла;

	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыФормыОбъекта(МетаданныеОбъекта)
	УстановитьПустоеОписаниеРеквизитовОбъекта();

	МассивДобавляемыхРеквизитов = Новый Массив;
	ДобавитьСтандартныеРеквизитыМетаданногоКДобавлениюНаФорму(МетаданныеОбъекта, МассивДобавляемыхРеквизитов);
	ДобавитьРеквизитыМетаданногоКДобавлениюНаФорму(МетаданныеОбъекта, МассивДобавляемыхРеквизитов);
	ДобавитьСпецифичныеРеквизитыПланаСчетовКДобавлениюНаФорму(МетаданныеОбъекта, МассивДобавляемыхРеквизитов);
	ДобавитьСпецифичныеРеквизитыЗадачиКДобавлениюНаФорму(МетаданныеОбъекта, МассивДобавляемыхРеквизитов);

	Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		ДобавитьТабличнуюЧастьКДобавлениюНаФорму(ТабличнаяЧасть, "ТабличнаяЧасть_", МассивДобавляемыхРеквизитов);
	КонецЦикла;

	Если УИ_ОбщегоНазначения.ЭтоПланСчетов(МетаданныеОбъекта)
			ИЛИ УИ_ОбщегоНазначения.ЭтоПланВидовРасчета(МетаданныеОбъекта) Тогда
		Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.СтандартныеТабличныеЧасти Цикл
			ДобавитьТабличнуюЧастьКДобавлениюНаФорму(ТабличнаяЧасть, "СтандартнаяТабличнаяЧасть_", МассивДобавляемыхРеквизитов);
		КонецЦикла;

	КонецЕсли;

	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

	ДобавитьРеквизитыТабличныхЧастейВРеквизитыФормы(МетаданныеОбъекта);

	ДобавитьНаборыДвиженийДокументаВРеквизитыФормы(МетаданныеОбъекта);
КонецПроцедуры

#КонецОбласти

#Область СозданиеЭлементовФормы

&НаСервере
Процедура УстановитьВидимостьЗакладкиДвижений()
	Элементы.ГруппаДвижения.Видимость = ОбрабатыватьДвижения И ЭтоДокумент;
КонецПроцедуры

&НаСервере
Процедура УдалитьДобавленныеЭлементыФормы()
	МассивГруппДляОчищения = Новый Массив;
	МассивГруппДляОчищения.Добавить(Элементы.ГруппаРеквизиты);
	МассивГруппДляОчищения.Добавить(Элементы.ГруппаСтраницыТабличныеЧасти);

	МассивЭлементовДляУдаления = Новый Массив;

	Для Каждого ТекГруппа Из МассивГруппДляОчищения Цикл
		Для Каждого Элемент Из ТекГруппа.ПодчиненныеЭлементы Цикл
			МассивЭлементовДляУдаления.Добавить(Элемент);
		КонецЦикла;
	КонецЦикла;

	Для Каждого Элемент Из МассивЭлементовДляУдаления Цикл
		Элементы.Удалить(Элемент);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыФормыДляРеквизитовОбъекта()
	ГруппаРеквизитов = Элементы.ГруппаРеквизиты;

	МассивИменРеквизитовНедоступныхДляИзменения = Новый Массив;
	МассивИменРеквизитовНедоступныхДляИзменения.Добавить("ССЫЛКА");
	МассивИменРеквизитовНедоступныхДляИзменения.Добавить("ПРЕДОПРЕДЕЛЕННЫЙ");

	СоответствиеГруппРеквизитов = Новый Соответствие;

	Для Каждого ОписаниеРеквизита Из РеквизитыОбъекта.Реквизиты Цикл

		ГруппаТекущегоРеквизита = СоответствиеГруппРеквизитов[ОписаниеРеквизита.ГруппаРеквизитов];
		Если ГруппаТекущегоРеквизита = Неопределено Тогда
		// Делаем группу под каждую константу, чтобы ее можно было разрисовывать
			ОписаниеГруппы = УИ_РаботаСФормами.НовыйОписаниеГруппыФормы();
			ОписаниеГруппы.Имя = "Группа_Реквизиты_"
				+ ОписаниеРеквизита.ГруппаРеквизитов;
			ОписаниеГруппы.Заголовок = ОписаниеРеквизита.ПредставлениеГруппыРеквизитов;
			ОписаниеГруппы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ОписаниеГруппы.ОтображатьЗаголовок = Истина;
			ОписаниеГруппы.Родитель = ГруппаРеквизитов;

			ОписаниеГруппы.Поведение = ПоведениеОбычнойГруппы.Свертываемая;

			ГруппаТекущегоРеквизита = УИ_РаботаСФормами.СоздатьГруппуПоОписанию(ЭтотОбъект, ОписаниеГруппы);
			ГруппаТекущегоРеквизита.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
		КонецЕсли;

		ОписаниеЭлемента = УИ_РаботаСФормами.НовыйОписаниеРеквизитаЭлемента();
		ОписаниеЭлемента.СоздаватьРеквизит = Ложь;
		ОписаниеЭлемента.СоздаватьЭлемент = Истина;
		ОписаниеЭлемента.Имя = ОписаниеРеквизита.ИмяРеквизитаФормы;
		ОписаниеЭлемента.Заголовок = ОписаниеРеквизита.Заголовок;
		ОписаниеЭлемента.ПутьКДанным = ОписаниеРеквизита.ИмяРеквизитаФормы;
		ОписаниеЭлемента.Вставить("ПутьКРеквизиту", ОписаниеРеквизита.ИмяРеквизитаФормы);
		ОписаниеЭлемента.РодительЭлемента = ГруппаТекущегоРеквизита;

		Если (ОписаниеРеквизита.Тип.Типы().Количество() = 1
				И ОписаниеРеквизита.Тип.СодержитТип(Тип("Булево"))) Тогда
			ОписаниеЭлемента.Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
		КонецЕсли;

		Если МассивИменРеквизитовНедоступныхДляИзменения.Найти(ВРег(ОписаниеРеквизита.Имя)) <> Неопределено Тогда
			ОписаниеЭлемента.Параметры.Вставить("ТолькоПросмотр", Истина);
		КонецЕсли;

		УИ_РаботаСФормами.СоздатьЭлементПоОписанию(ЭтотОбъект, ОписаниеЭлемента);

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыДляТабличныхЧастейОбъекта()
	ГруппаТабличныхЧастей = Элементы.ГруппаСтраницыТабличныеЧасти;
	Для Каждого ОписаниеТЧ Из РеквизитыОбъекта.ТабличныеЧасти Цикл

	// Для каждой ТЧ добавляем свою закладку табличной части
	// Делаем группу под каждую константу, чтобы ее можно было разрисовывать
		ОписаниеГруппы = УИ_РаботаСФормами.НовыйОписаниеГруппыФормы();
		ОписаниеГруппы.Имя = "Группа_ТЧ_" + ОписаниеТЧ.ИмяРеквизитаФормы;
		ОписаниеГруппы.Заголовок = ОписаниеТЧ.Заголовок;
		ОписаниеГруппы.Вид = ВидГруппыФормы.Страница;
		ОписаниеГруппы.ОтображатьЗаголовок = Истина;
		ОписаниеГруппы.Родитель = ГруппаТабличныхЧастей;

		ГруппаТекущегоРеквизита = УИ_РаботаСФормами.СоздатьГруппуПоОписанию(ЭтотОбъект, ОписаниеГруппы);

		ОписаниеЭлемента = УИ_РаботаСФормами.НовыйОписаниеРеквизитаЭлемента();
		ОписаниеЭлемента.СоздаватьРеквизит = Ложь;
		ОписаниеЭлемента.СоздаватьЭлемент = Истина;
		ОписаниеЭлемента.Имя = ОписаниеТЧ.ИмяРеквизитаФормы;
		ОписаниеЭлемента.Заголовок = ОписаниеТЧ.Заголовок;
		ОписаниеЭлемента.ПутьКДанным = ОписаниеТЧ.ИмяРеквизитаФормы;
		ОписаниеЭлемента.Вставить("ПутьКРеквизиту", ОписаниеТЧ.ИмяРеквизитаФормы);
		ОписаниеЭлемента.РодительЭлемента = ГруппаТекущегоРеквизита;

		ОписаниеЭлемента.Параметры.Вставить("Тип", Тип("ТаблицаФормы"));
		ОписаниеЭлемента.Параметры.Вставить("ПутьКДанным", ОписаниеТЧ.ИмяРеквизитаФормы);

		ОписаниеЭлемента.Действия.Вставить("ПриИзменении", "Подключаемый_ТабличнаяЧастьПриИзменении");
		ОписаниеЭлемента.Действия.Вставить("ПриНачалеРедактирования", "Подключаемый_ТабличнаяЧастьПриНачалеРедактирования");

		ТаблицаТЧ = УИ_РаботаСФормами.СоздатьЭлементПоОписанию(ЭтотОбъект, ОписаниеЭлемента);

		Для Каждого РеквизитТЧ Из ОписаниеТЧ.Реквизиты Цикл

			ОписаниеЭлемента = УИ_РаботаСФормами.НовыйОписаниеРеквизитаЭлемента();
			ОписаниеЭлемента.СоздаватьРеквизит = Ложь;
			ОписаниеЭлемента.СоздаватьЭлемент = Истина;
			ОписаниеЭлемента.Имя = РеквизитТЧ.ИмяРеквизитаФормы;
			ОписаниеЭлемента.Заголовок = РеквизитТЧ.Заголовок;
			ОписаниеЭлемента.ПутьКДанным = ОписаниеТЧ.ИмяРеквизитаФормы + "."
				+ РеквизитТЧ.ИмяРеквизитаФормы;
			ОписаниеЭлемента.Вставить("ПутьКРеквизиту", ОписаниеТЧ.ИмяРеквизитаФормы
				+ "." + РеквизитТЧ.ИмяРеквизитаФормы);
			ОписаниеЭлемента.РодительЭлемента = ТаблицаТЧ;

			ОписаниеЭлемента.Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			Если НРег(РеквизитТЧ.Имя) = "номерстроки" Тогда
				ОписаниеЭлемента.Параметры.Вставить("ТолькоПросмотр", Истина);
			КонецЕсли;

			Если (РеквизитТЧ.Тип.Типы().Количество() = 1
					И РеквизитТЧ.Тип.СодержитТип(Тип("Булево"))) Тогда
				ОписаниеЭлемента.Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
			КонецЕсли;

			УИ_РаботаСФормами.СоздатьЭлементПоОписанию(ЭтотОбъект, ОписаниеЭлемента);

		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыДляДвиженийДокумента()
	Если Не ЭтоДокумент Тогда
		Возврат;
	КонецЕсли;

	СоответствиеСтраницПоТипамРегистра = Новый Структура;
	СоответствиеСтраницПоТипамРегистра.Вставить("РегистрБухгалтерии", Элементы.ГруппаДвиженияСтраницыРегистровБухгалтерии);
	СоответствиеСтраницПоТипамРегистра.Вставить("РегистрНакопления", Элементы.ГруппаДвиженияСтраницыРегистровНакопления);
	СоответствиеСтраницПоТипамРегистра.Вставить("РегистрСведений", Элементы.ГруппаДвиженияСтраницыРегистровСведений);
	СоответствиеСтраницПоТипамРегистра.Вставить("РегистрРасчета", Элементы.ГруппаДвиженияСтраницыРегистровРасчета);

	Для Каждого ОписаниеРегистра Из РеквизитыОбъекта.Движения Цикл
	// Под каждый регистр нам нужно сделать свою закладку и на ней разместить табличку редактирования регистра
		ОписаниеГруппы = УИ_РаботаСФормами.НовыйОписаниеГруппыФормы();
		ОписаниеГруппы.Имя = "Группа_" + ОписаниеРегистра.ТипРегистра + "_"
			+ ОписаниеРегистра.ИмяРеквизитаФормы;
		ОписаниеГруппы.Заголовок = ОписаниеРегистра.Заголовок;
		ОписаниеГруппы.Вид = ВидГруппыФормы.Страница;
		ОписаниеГруппы.ОтображатьЗаголовок = Истина;
		ОписаниеГруппы.Родитель = СоответствиеСтраницПоТипамРегистра[ОписаниеРегистра.ТипРегистра];

		ГруппаТекущегоРеквизита = УИ_РаботаСФормами.СоздатьГруппуПоОписанию(ЭтотОбъект, ОписаниеГруппы);

		// Сама табличка
		ОписаниеЭлемента = УИ_РаботаСФормами.НовыйОписаниеРеквизитаЭлемента();
		ОписаниеЭлемента.СоздаватьРеквизит = Ложь;
		ОписаниеЭлемента.СоздаватьЭлемент = Истина;
		ОписаниеЭлемента.Имя = ОписаниеРегистра.ИмяРеквизитаФормы;
		ОписаниеЭлемента.Заголовок = ОписаниеРегистра.Заголовок;
		ОписаниеЭлемента.ПутьКДанным = ОписаниеРегистра.ИмяРеквизитаФормы;
		ОписаниеЭлемента.Вставить("ПутьКРеквизиту", ОписаниеРегистра.ИмяРеквизитаФормы);
		ОписаниеЭлемента.РодительЭлемента = ГруппаТекущегоРеквизита;

		ОписаниеЭлемента.Параметры.Вставить("Тип", Тип("ТаблицаФормы"));
		ОписаниеЭлемента.Параметры.Вставить("ПутьКДанным", ОписаниеРегистра.ИмяРеквизитаФормы);

		ОписаниеЭлемента.Действия.Вставить("ПриИзменении", "Подключаемый_ТабличнаяЧастьПриИзменении");
		ОписаниеЭлемента.Действия.Вставить("ПриНачалеРедактирования", "Подключаемый_ТабличнаяЧастьПриНачалеРедактирования");

		ТаблицаТЧ = УИ_РаботаСФормами.СоздатьЭлементПоОписанию(ЭтотОбъект, ОписаниеЭлемента);

		Для Каждого РеквизитТЧ Из ОписаниеРегистра.Реквизиты Цикл

			ОписаниеЭлемента = УИ_РаботаСФормами.НовыйОписаниеРеквизитаЭлемента();
			ОписаниеЭлемента.СоздаватьРеквизит = Ложь;
			ОписаниеЭлемента.СоздаватьЭлемент = Истина;
			ОписаниеЭлемента.Имя = РеквизитТЧ.ИмяРеквизитаФормы;
			ОписаниеЭлемента.Заголовок = РеквизитТЧ.Заголовок;
			ОписаниеЭлемента.ПутьКДанным = ОписаниеРегистра.ИмяРеквизитаФормы + "."
				+ РеквизитТЧ.ИмяРеквизитаФормы;
			ОписаниеЭлемента.Вставить("ПутьКРеквизиту", ОписаниеРегистра.ИмяРеквизитаФормы
				+ "." + РеквизитТЧ.ИмяРеквизитаФормы);
			ОписаниеЭлемента.РодительЭлемента = ТаблицаТЧ;

			ОписаниеЭлемента.Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			Если НРег(РеквизитТЧ.Имя) = "номерстроки" Тогда
				ОписаниеЭлемента.Параметры.Вставить("ТолькоПросмотр", Истина);
			КонецЕсли;

			Если (РеквизитТЧ.Тип.Типы().Количество() = 1
					И РеквизитТЧ.Тип.СодержитТип(Тип("Булево"))) Тогда
				ОписаниеЭлемента.Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
			КонецЕсли;

			УИ_РаботаСФормами.СоздатьЭлементПоОписанию(ЭтотОбъект, ОписаниеЭлемента);

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СоздатьОбновитьЭлементыФормыПоРеквизитамОбъекта(МетаданныеОбъекта)
	ДобавитьЭлементыФормыДляРеквизитовОбъекта();
	ДобавитьЭлементыДляТабличныхЧастейОбъекта();
	ДобавитьЭлементыДляДвиженийДокумента();
КонецПроцедуры

#КонецОбласти

#Область ЗаписьДанныхОбъекта

&НаСервере
Процедура ЗаписатьСпецифическиеДляРегистраБухгалтерииРеквизитыДвижения(НоваяЗапись,
		СтрокаТаблицыФормы, ОписаниеРегистра, МассивПропускаемыхРеквизитов)
	СоответствиеСчетовИВидовСубконто = Новый Соответствие;
	Если ОписаниеРегистра.Корреспонденция Тогда
		СоответствиеСчетовИВидовСубконто.Вставить("СчетДт", "СубконтоДт");
		СоответствиеСчетовИВидовСубконто.Вставить("СчетКт", "СубконтоКт");
	Иначе
		СоответствиеСчетовИВидовСубконто.Вставить("Счет", "Субконто");
	КонецЕсли;

	Для Каждого КлючЗначение Из СоответствиеСчетовИВидовСубконто Цикл
		Для НомерСубконто = 1 По ОписаниеРегистра.МаксКоличествоСубконто Цикл

			МассивПропускаемыхРеквизитов.Добавить(ВРег(КлючЗначение.Значение
				+ НомерСубконто));
		КонецЦикла;

		Для Каждого СтрокаВидаСубконто Из СтрокаТаблицыФормы[КлючЗначение.Ключ].ВидыСубконто Цикл
			НоваяЗапись[КлючЗначение.Значение][СтрокаВидаСубконто.ВидСубконто] = СтрокаТаблицыФормы[КлючЗначение.Значение
				+ СтрокаВидаСубконто.НомерСтроки];

		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаборЗаписейДвиженийПоТаблицеФормы(НаборЗаписей,
		ТаблицаФормы, ОписаниеРегистра, ЭтоРегистрБухгалтерии)
	МассивНеобновляемыхРеквизитов = Новый Массив;
	МассивНеобновляемыхРеквизитов.Добавить("НОМЕРСТРОКИ");

	Для Каждого СтрокаТз Из ТаблицаФормы Цикл

		НоваяЗапись = НаборЗаписей.Добавить();

		МассивПропускаемыхРеквизитов = Новый Массив;

		Если ЭтоРегистрБухгалтерии Тогда
			ЗаписатьСпецифическиеДляРегистраБухгалтерииРеквизитыДвижения(НоваяЗапись, СтрокаТз, ОписаниеРегистра, МассивПропускаемыхРеквизитов);
		КонецЕсли;

		Для Каждого ТекР Из ОписаниеРегистра.Реквизиты Цикл
			Если МассивПропускаемыхРеквизитов.Найти(ВРег(ТекР.Имя)) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;

			Если МассивНеобновляемыхРеквизитов.Найти(ВРег(ТекР.Имя)) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;

			НоваяЗапись[ТекР.ИмяРеквизитаФормы] = СтрокаТз[ТекР.Имя];
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьДвиженияДокументаВБазу()
	Для Каждого ОписаниеРегистра Из РеквизитыОбъекта.Движения Цикл
		НаборЗаписей = НаборЗаписейРегистраДвижений(ОписаниеРегистра);
		НаборЗаписей.Очистить();
		ТаблицаФормы = ЭтотОбъект[ОписаниеРегистра.ИмяРеквизитаФормы];

		ЭтоРегистрБухгалтерии = ВРег(ОписаниеРегистра.ТипРегистра) = "РЕГИСТРБУХГАЛТЕРИИ";

		ЗаполнитьНаборЗаписейДвиженийПоТаблицеФормы(НаборЗаписей, ТаблицаФормы, ОписаниеРегистра, ЭтоРегистрБухгалтерии);

		ВыполнитьЗаписьОбъектаВБазу(НаборЗаписей);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыНаСервереПередЗаписью(ОбъектЗаписи)
	МассивНеизменныхРеквизитов = Новый Массив;
	МассивНеизменныхРеквизитов.Добавить("ССЫЛКА");
	МассивНеизменныхРеквизитов.Добавить("ПРЕДОПРЕДЕЛЕННЫЙ");

	Для Каждого ТекРеквизит Из РеквизитыОбъекта.Реквизиты Цикл
		Если МассивНеизменныхРеквизитов.Найти(ВРег(ТекРеквизит.Имя)) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ОбъектЗаписи[ТекРеквизит.Имя] = ЭтотОбъект[ТекРеквизит.ИмяРеквизитаФормы];
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧастьНаСервереПередЗаписью(ОбъектЗаписи,
		ТекТабличнаяЧасть)
	ТЧОбъекта = ОбъектЗаписи[ТекТабличнаяЧасть.Имя];
	ТЧОбъекта.Очистить();

	ТаблицаФормы = ЭтотОбъект[ТекТабличнаяЧасть.ИмяРеквизитаФормы];

	МассивНеобновляемыхРеквизитов = Новый Массив;
	МассивНеобновляемыхРеквизитов.Добавить("НОМЕРСТРОКИ");

	Для Каждого СтрокаТаблицыФормы Из ТаблицаФормы Цикл
		СтрокаТЧ = ТЧОбъекта.Добавить();

		Для Каждого ТекРеквизит Из ТекТабличнаяЧасть.Реквизиты Цикл
			Если МассивНеобновляемыхРеквизитов.Найти(ВРег(ТекРеквизит.Имя)) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;

			СтрокаТЧ[ТекРеквизит.Имя] = СтрокаТаблицыФормы[ТекРеквизит.ИмяРеквизитаФормы];
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличныеЧастиНаСервереПередЗаписью(ОбъектЗаписи)
	Для каждого ТекТабличнаяЧасть Из РеквизитыОбъекта.ТабличныеЧасти Цикл
		ЗаполнитьТабличнуюЧастьНаСервереПередЗаписью(ОбъектЗаписи, ТекТабличнаяЧасть);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаписьОбъектаВБазу(ОбъектЗаписи)
	ОбъектЗаписи.ОбменДанными.Загрузка = ЗаписьБезПроверок;

	Попытка
		ОбъектЗаписи.Записать();
		Модифицированность = Ложь;
	Исключение
		УИ_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запись не удалась: "
			+ ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	Если НЕ ЗначениеЗаполнено(РедактируемыйОбъект) Тогда
		Возврат;
	КонецЕсли;

	ОбъектЗаписи = РедактируемыйОбъект.ПолучитьОбъект();

	ЗаполнитьРеквизитыНаСервереПередЗаписью(ОбъектЗаписи);
	ЗаполнитьТабличныеЧастиНаСервереПередЗаписью(ОбъектЗаписи);

	ВыполнитьЗаписьОбъектаВБазу(ОбъектЗаписи);

	ЗаписатьДвиженияДокументаВБазу();
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьФормуПоОбъекту()
	Если НЕ ЗначениеЗаполнено(РедактируемыйОбъект) Тогда
		Возврат;
	КонецЕсли;

	МетаданныеОбъекта = РедактируемыйОбъект.Метаданные();

	ЭтоДокумент = УИ_ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта);
	ПолныйПутьКМетаданным = МетаданныеОбъекта.ПолноеИмя();

	Если ПолныйПутьКМетаданным <> ПолноеИмяОбъектаМетаданных Тогда
		УдалитьДобавленныеРеквизитыФормы();
		УдалитьДобавленныеЭлементыФормы();

		СоздатьРеквизитыФормыОбъекта(МетаданныеОбъекта);

		СоздатьОбновитьЭлементыФормыПоРеквизитамОбъекта(МетаданныеОбъекта);

		ПолноеИмяОбъектаМетаданных = ПолныйПутьКМетаданным;
		Элементы.ВыбранныйОбъект.Заголовок = ПолноеИмяОбъектаМетаданных;

	КонецЕсли;
	УстановитьВидимостьЗакладкиДвижений();

	ЗаполнитьДанныеОбъектаНаФорме();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъектПоДаннымОтладки(АдресДанныхОтладки)
	ДанныеДляОтладки = ПолучитьИзВременногоХранилища(АдресДанныхОтладки);
	РедактируемыйОбъект = ДанныеДляОтладки.Объект;
	ЗаполнитьФормуПоОбъекту();
КонецПроцедуры

#КонецОбласти

#Область ОбщегоНазначения

&НаСервере
Функция СоответствиеМенеджеровПоТипамРегистра()
	СоответствиеМенеджеровПоТипамРегистра = Новый Структура;
	СоответствиеМенеджеровПоТипамРегистра.Вставить("РегистрБухгалтерии", РегистрыБухгалтерии);
	СоответствиеМенеджеровПоТипамРегистра.Вставить("РегистрНакопления", РегистрыНакопления);
	СоответствиеМенеджеровПоТипамРегистра.Вставить("РегистрСведений", РегистрыСведений);
	СоответствиеМенеджеровПоТипамРегистра.Вставить("РегистрРасчета", РегистрыРасчета);

	Возврат СоответствиеМенеджеровПоТипамРегистра;
КонецФункции

&НаСервере
Функция НаборЗаписейРегистраДвижений(ОписаниеРегистра)
	СоответствиеМенеджеровПоТипамРегистра = СоответствиеМенеджеровПоТипамРегистра();
	МенеджерТипаРегистра = СоответствиеМенеджеровПоТипамРегистра[ОписаниеРегистра.ТипРегистра];
	НаборЗаписей = МенеджерТипаРегистра[ОписаниеРегистра.Имя].СоздатьНаборЗаписей();

	НаборЗаписей.Отбор.Регистратор.Установить(РедактируемыйОбъект, Истина);
	Возврат НаборЗаписей;
КонецФункции

#КонецОбласти


