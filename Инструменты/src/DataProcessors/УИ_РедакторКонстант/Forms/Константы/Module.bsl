
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Нпп=1;
	Для Каждого Константа ИЗ Метаданные.Константы Цикл
		
		НоваяСтрока = ТаблицаКонстант.Добавить();
		НоваяСтрока.нПП =Нпп;
		НоваяСтрока.ИмяКонстанты = Константа.Имя;
		НоваяСтрока.СинонимКонстанты = Константа.Синоним;
		НоваяСтрока.ОписаниеТипов = Константа.Тип;
		//СтруктураФОпция = ПолучитьФункциональнуюОпциюКонстанты(Константа.Имя);
		//НоваяСтрока.ФОпция = СтруктураФОпция.ИмяФОпции;
		//НоваяСтрока.ПривилегированныйРежимПриПолучении = СтруктураФОпция.ПривилегированныйРежимПриПолучении;
		НоваяСтрока.ЗначениеКонстанты = Константы[Константа.Имя].Получить();
		
		Нпп=Нпп+1;
	КонецЦикла;

	//Заполним функциональные опции констант
	Для Каждого ФОпция ИЗ Метаданные.ФункциональныеОпции Цикл
		Если НЕ Метаданные.Константы.Содержит(ФОпция.Хранение) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска=Новый Структура;
		СтруктураПоиска.Вставить("ИмяКонстанты",ФОпция.Хранение.Имя);
		
		НайденныеСтроки=ТаблицаКонстант.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки[0].ФОпция=ФОпция.Имя;
		НайденныеСтроки[0].ПривилегированныйРежимПриПолучении=ФОпция.ПривилегированныйРежимПриПолучении;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущийЭлемент = Элемент.ТекущийЭлемент;
	
	Если ТекущиеДанные.ОписаниеТипов.Типы()[0] = Тип("ХранилищеЗначения") Тогда
		Отказ = Истина;
		ПредупреждениеСообщение(, "Значение типа ""ХранилищеЗначения"" недоступно для корректировки.");
		Возврат;
	КонецЕсли;
	
	Попытка
		ТекущийЭлемент.ОграничениеТипа = ТекущиеДанные.ОписаниеТипов;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантПередНачаломИзмененияЗавершение(Ответ, Отказ) Экспорт
	
	ЗначениеОтвета = ПолучитьКодВозвратаДиалога(Ответ);
	Если ЗначениеОтвета = Неопределено ИЛИ ЗначениеОтвета = КодВозвратаДиалога.НЕТ ИЛИ ЗначениеОтвета = КодВозвратаДиалога.Таймаут Тогда
		Возврат;
	КонецЕсли;
	
	// Переход к изменению значения константы.
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКодВозвратаДиалога(Ответ)
	Перем ЗначениеОтвета;
	
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда
		ЗначениеОтвета = Ответ.Значение;
	Иначе
		ЗначениеОтвета = Ответ;
	КонецЕсли;
	
	Возврат ЗначениеОтвета;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаКонстантПриИзменении(Элемент)
	Перем ТекущиеДанные;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущиеДанные.Изменено=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредупреждениеСообщение(Оповещение, ТекстПредупрежденияСообщения, Таймаут = 0, Заголовок = "")
	
	ПоказатьПредупреждение(Оповещение, ТекстПредупрежденияСообщения, Таймаут, Заголовок);
		
КонецПроцедуры


&НаСервере
Процедура ЗаписатьНаСервере()
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтрокаКонстанты ИЗ ТаблицаКонстант Цикл
		Если Не СтрокаКонстанты.Изменено Тогда
			Продолжить;
		КонецЕсли;
		
		
		Попытка
			Константы[СтрокаКонстанты.ИмяКонстанты].Установить(СтрокаКонстанты.ЗначениеКонстанты);
			СтрокаКонстанты.Изменено=Ложь;
		Исключение
			Сообщить(ИнформацияОбОшибке());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьКонстанты(Команда)
	ЗаписатьНаСервере();
КонецПроцедуры

