#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	WindowsКлиент=ЭтоWindows();

	ОбновитьКлиент();
	ОбновитьСервер();

	Элементы.ТекущийКаталогСервер.СписокВыбора.ЗагрузитьЗначения(ИсторияВыбораСервер.ВыгрузитьЗначения());
	Элементы.ТекущийКаталогКлиент.СписокВыбора.ЗагрузитьЗначения(ИсторияВыбораКлиент.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	WindowsСервер=ЭтоWindows();
	РазделительПутиКлиент=ПолучитьРазделительПутиКлиента();
	РазделительПутиСервер=ПолучитьРазделительПутиСервера();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекущийКаталогСерверПриИзменении(Элемент)
	Если Не ПустаяСтрока(ТекущийКаталогСервер) И Не Прав(ТекущийКаталогСервер, 1) = РазделительПутиСервер Тогда
		ТекущийКаталогСервер = ТекущийКаталогСервер + РазделительПутиСервер;
	КонецЕсли;
	ОбновитьСервер();
	ОбновитьИсториюСервер();
КонецПроцедуры

&НаКлиенте
Процедура ТекущийКаталогКлиентПриИзменении(Элемент)
	Если Не ПустаяСтрока(ТекущийКаталогКлиент) И Не Прав(ТекущийКаталогКлиент, 1) = РазделительПутиКлиент Тогда
		ТекущийКаталогКлиент = ТекущийКаталогКлиент + РазделительПутиКлиент;
	КонецЕсли;
	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ФайлыСервер

&НаКлиенте
Процедура ФайлыСерверВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущаяВетка = Элемент.ТекущиеДанные;
	Если ТекущаяВетка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Не ТекущаяВетка.ЭтоКаталог Тогда
		Возврат;
	КонецЕсли;

	Если ТекущийКаталогСервер <> ТекущаяВетка.ПолноеИмя Тогда
		ТекущийКаталогСервер = ТекущаяВетка.ПолноеИмя;
	Иначе
		Родитель = ТекущаяВетка.ПолучитьРодителя();
		Если Родитель = Неопределено Тогда
			ТекущийКаталогСервер = "";
		Иначе
			ТекущийКаталогСервер = Родитель.ПолноеИмя;
		КонецЕсли;
	КонецЕсли;

	ОбновитьСервер();
	ОбновитьИсториюСервер();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ФайлыКлиент

&НаКлиенте
Процедура ФайлыКлиентВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущаяВетка = Элемент.ТекущиеДанные;
	Если ТекущаяВетка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Не ТекущаяВетка.ЭтоКаталог Тогда
		Возврат;
	КонецЕсли;

	Если ТекущийКаталогКлиент <> ТекущаяВетка.ПолноеИмя Тогда
		ТекущийКаталогКлиент = ТекущаяВетка.ПолноеИмя;
	Иначе
		Родитель = ТекущаяВетка.ПолучитьРодителя();
		Если Родитель = Неопределено Тогда
			ТекущийКаталогКлиент = "";
		Иначе
			ТекущийКаталогКлиент = Родитель.ПолноеИмя;
		КонецЕсли;
	КонецЕсли;

	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСервер(Команда = Неопределено)
	Если Не WindowsСервер И Не ЗначениеЗаполнено(ТекущийКаталогСервер) Тогда
		ТекущийКаталогСервер="/";
	КонецЕсли;

	ОбновитьДеревоФайлов(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКлиент(Команда = Неопределено)
	Если Не WindowsКлиент И Не ЗначениеЗаполнено(ТекущийКаталогКлиент) Тогда
		ТекущийКаталогКлиент="/";
	КонецЕсли;

	ОбновитьДеревоФайлов(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиСервер(Команда)
	ИмяКаталога = СтрПолучитьСтроку(СтрЗаменить(Команда.Имя, "_", Символы.ПС), 2);
	ТекущийКаталогСервер = ИмяКаталонаНаСервере(ИмяКаталога);
	ОбновитьСервер();
	ОбновитьИсториюСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКлиент(Команда)
	ИмяКаталога = СтрПолучитьСтроку(СтрЗаменить(Команда.Имя, "_", Символы.ПС), 2);
	ТекущийКаталогКлиент = Вычислить(ИмяКаталога + "()");
	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура Перейти_РабочийСтол_Клиент(Команда)
	МассивКаталогов = РазложитьСтрокуВМассивПодстрок(КаталогДокументов(), РазделительПутиКлиент);
	Если ПустаяСтрока(МассивКаталогов[МассивКаталогов.ВГраница()]) Тогда
		МассивКаталогов.Удалить(МассивКаталогов.ВГраница());
	КонецЕсли;
	МассивКаталогов[МассивКаталогов.ВГраница()] = "Desktop";
	Путь = "";
	Для Каждого ИмяКаталога Из МассивКаталогов Цикл
		Путь = Путь + ИмяКаталога + РазделительПутиКлиент;
	КонецЦикла;
	ТекущийКаталогКлиент = Путь;
	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНаСервер(Команда)

	КаталогИсточник = ТекущийКаталогКлиент;
	КаталогПриемник = ТекущийКаталогСервер;
	Если ПустаяСтрока(КаталогПриемник) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.ФайлыКлиент;
	Дерево = ФайлыКлиент;
	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;

	МассивФайлов = Новый Массив;
	Для Каждого ИдентификаторСтроки Из ЭлементДерево.ВыделенныеСтроки Цикл
		СтрокаДерева = Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если СтрДлина(СтрокаДерева.ПолноеИмя) <= СтрДлина(КаталогИсточник) Тогда
			Возврат;
		КонецЕсли;

		СтрокаСтруктура = Новый Структура("ПолноеИмя,ЭтоКаталог", СтрокаДерева.ПолноеИмя, СтрокаДерева.ЭтоКаталог);
		МассивФайлов.Добавить(СтрокаСтруктура);
		Если Не СтрокаСтруктура.ЭтоКаталог Тогда
			Продолжить;
		КонецЕсли;

		Результат = НайтиВсеФайлыНаКлиенте(СтрокаДерева.ПолноеИмя, РазделительПутиКлиент);
		Для Каждого СтрокаСтруктура Из Результат Цикл
			МассивФайлов.Добавить(СтрокаСтруктура);
		КонецЦикла;
	КонецЦикла;

	Для сч = 0 По МассивФайлов.ВГраница() Цикл
		СтрокаСтруктура = МассивФайлов[сч];
		Состояние("Копирование " + (сч + 1) + " из " + МассивФайлов.Количество() + " : " + СтрокаСтруктура.ПолноеИмя);

		КонечноеИмяФайла = КаталогПриемник + Сред(СтрокаСтруктура.ПолноеИмя, СтрДлина(КаталогИсточник) + 1);

		Если СтрокаСтруктура.ЭтоКаталог Тогда
			Файл = Новый Файл(КонечноеИмяФайла);
			Если Не Файл.Существует() Тогда
				СоздатьКаталогНаСервере(КонечноеИмяФайла);
			КонецЕсли;
		Иначе
			ДвоичныеДанные = Новый ДвоичныеДанные(СтрокаСтруктура.ПолноеИмя);
			АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
			РазвернутьФайлНаСервере(АдресВХранилище, КонечноеИмяФайла);
		КонецЕсли;

	КонецЦикла;

	ОбновитьСервер();

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНаКлиент(Команда)

	КаталогИсточник = ТекущийКаталогСервер;
	КаталогПриемник = ТекущийКаталогКлиент;
	Если ПустаяСтрока(КаталогПриемник) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.ФайлыСервер;
	Дерево = ФайлыСервер;
	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;

	МассивФайлов = Новый Массив;
	Для Каждого ИдентификаторСтроки Из ЭлементДерево.ВыделенныеСтроки Цикл
		СтрокаДерева = Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если СтрДлина(СтрокаДерева.ПолноеИмя) <= СтрДлина(КаталогИсточник) Тогда
			Возврат;
		КонецЕсли;

		СтрокаСтруктура = Новый Структура("ПолноеИмя,ЭтоКаталог", СтрокаДерева.ПолноеИмя, СтрокаДерева.ЭтоКаталог);
		МассивФайлов.Добавить(СтрокаСтруктура);
		Если Не СтрокаСтруктура.ЭтоКаталог Тогда
			Продолжить;
		КонецЕсли;

		Результат = НайтиВсеФайлыНаСервере(СтрокаДерева.ПолноеИмя, РазделительПутиСервер);
		Для Каждого СтрокаСтруктура Из Результат Цикл
			МассивФайлов.Добавить(СтрокаСтруктура);
		КонецЦикла;
	КонецЦикла;

	Для сч = 0 По МассивФайлов.ВГраница() Цикл
		СтрокаСтруктура = МассивФайлов[сч];
		Состояние("Копирование " + (сч + 1) + " из " + МассивФайлов.Количество() + " : " + СтрокаСтруктура.ПолноеИмя);

		КонечноеИмяФайла = КаталогПриемник + Сред(СтрокаСтруктура.ПолноеИмя, СтрДлина(КаталогИсточник) + 1);

		Если СтрокаСтруктура.ЭтоКаталог Тогда
			Файл = Новый Файл(КонечноеИмяФайла);
			Если Не Файл.Существует() Тогда
				СоздатьКаталог(КонечноеИмяФайла);
			КонецЕсли;
		Иначе
			АдресВХранилище = ПоместитьВоВременноеХранилищеНаСервере(СтрокаСтруктура.ПолноеИмя,
				ЭтаФорма.УникальныйИдентификатор);
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
			ДвоичныеДанные.Записать(КонечноеИмяФайла);
		КонецЕсли;

	КонецЦикла;

	ОбновитьКлиент();

КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаКлиенте(Команда)
	Если ПустаяСтрока(ТекущийКаталогКлиент) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.ФайлыКлиент;
	Дерево = ФайлыКлиент;

	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Строка Из ЭлементДерево.ВыделенныеСтроки Цикл
		ТекущиеДанные = Дерево.НайтиПоИдентификатору(Строка);
		УдалитьФайлы(ТекущиеДанные.ПолноеИмя);
	КонецЦикла;

	ОбновитьКлиент();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаСервере(Команда)
	Если ПустаяСтрока(ТекущийКаталогСервер) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.ФайлыСервер;
	Дерево = ФайлыСервер;

	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Строка Из ЭлементДерево.ВыделенныеСтроки Цикл
		ТекущиеДанные = Дерево.НайтиПоИдентификатору(Строка);
		УдалитьФайлыНаСервере(ТекущиеДанные.ПолноеИмя);
	КонецЦикла;

	ОбновитьСервер();

КонецПроцедуры

&НаКлиенте
Процедура ПереместитьССервераНаКлиент(Команда)
	СкопироватьНаКлиент(Неопределено);
	УдалитьНаСервере(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьСКлиентаНаСервер(Команда)
	СкопироватьНаСервер(Неопределено);
	УдалитьНаКлиенте(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьНаСервере(Команда)
	Если ПустаяСтрока(ТекущийКаталогСервер) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.ФайлыСервер;

	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;

	НовоеИмя = ТекущиеДанные.Имя + ТекущиеДанные.Расширение;
	НовоеИмя = СтрЗаменить(НовоеИмя, РазделительПутиСервер, "");
	Если Не ВвестиСтроку(НовоеИмя) Тогда
		Возврат;
	КонецЕсли;

	ПереименоватьФайлНаСервере(ТекущиеДанные.ПолноеИмя, ТекущийКаталогСервер + НовоеИмя, РазделительПутиСервер);

	ОбновитьСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьНаКлиенте(Команда)
	Если ПустаяСтрока(ТекущийКаталогКлиент) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.ФайлыКлиент;

	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;

	НовоеИмя = ТекущиеДанные.Имя + ТекущиеДанные.Расширение;
	НовоеИмя = СтрЗаменить(НовоеИмя, РазделительПутиКлиент, "");
	Если Не ВвестиСтроку(НовоеИмя) Тогда
		Возврат;
	КонецЕсли;

	ПереименоватьФайлНаКлиенте(ТекущиеДанные.ПолноеИмя, ТекущийКаталогСервер + НовоеИмя, РазделительПутиКлиент);

	ОбновитьКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ШагНазадКлиент(Команда)
	ЭлементСписок = Элементы.ТекущийКаталогКлиент.СписокВыбора;
	ТекущееЗначение = ТекущийКаталогКлиент;

	НайденныйЭлемент = ЭлементСписок.НайтиПоЗначению(ТекущееЗначение);
	Если НайденныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ЭлементСписок.Индекс(НайденныйЭлемент);
	Если Индекс + 1 < ЭлементСписок.Количество() - 1 Тогда
		ТекущийКаталогКлиент = ЭлементСписок[Индекс + 1].Значение;
		ОбновитьКлиент();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШагВпередКлиент(Команда)
	ЭлементСписок = Элементы.ТекущийКаталогКлиент.СписокВыбора;
	ТекущееЗначение = ТекущийКаталогКлиент;

	НайденныйЭлемент = ЭлементСписок.НайтиПоЗначению(ТекущееЗначение);
	Если НайденныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ЭлементСписок.Индекс(НайденныйЭлемент);
	Если Индекс > 0 Тогда
		ТекущийКаталогКлиент = ЭлементСписок[Индекс - 1].Значение;
		ОбновитьКлиент();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШагВверхКлиент(Команда)
	Дерево = ФайлыКлиент;
	ТекущийКаталог = ТекущийКаталогКлиент;

	Если ПустаяСтрока(ТекущийКаталог) Тогда
		Возврат;
	КонецЕсли;

	ТекущаяВетка = Дерево;
	Пока ТекущаяВетка.ПолучитьЭлементы().Количество() Цикл
		ТекущаяВетка = ТекущаяВетка.ПолучитьЭлементы()[0];
		Если ТекущаяВетка.ПолноеИмя = ТекущийКаталог Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Родитель = ТекущаяВетка.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		ТекущийКаталог = "";
	Иначе
		ТекущийКаталог = Родитель.ПолноеИмя;
	КонецЕсли;

	ТекущийКаталогКлиент = ТекущийКаталог;
	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ШагНазадСервер(Команда)
	ЭлементСписок = Элементы.ТекущийКаталогСервер.СписокВыбора;
	ТекущееЗначение = ТекущийКаталогСервер;

	НайденныйЭлемент = ЭлементСписок.НайтиПоЗначению(ТекущееЗначение);
	Если НайденныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ЭлементСписок.Индекс(НайденныйЭлемент);
	Если Индекс + 1 < ЭлементСписок.Количество() - 1 Тогда
		ТекущийКаталогСервер = ЭлементСписок[Индекс + 1].Значение;
		ОбновитьСервер();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШагВпередСервер(Команда)
	ЭлементСписок = Элементы.ТекущийКаталогСервер.СписокВыбора;
	ТекущееЗначение = ТекущийКаталогСервер;

	НайденныйЭлемент = ЭлементСписок.НайтиПоЗначению(ТекущееЗначение);
	Если НайденныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ЭлементСписок.Индекс(НайденныйЭлемент);
	Если Индекс > 0 Тогда
		ТекущийКаталогСервер = ЭлементСписок[Индекс - 1].Значение;
		ОбновитьСервер();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШагВверхСервер(Команда)
	Дерево = ФайлыСервер;
	ТекущийКаталог = ТекущийКаталогСервер;

	Если ПустаяСтрока(ТекущийКаталог) Тогда
		Возврат;
	КонецЕсли;

	ТекущаяВетка = Дерево;
	Пока ТекущаяВетка.ПолучитьЭлементы().Количество() Цикл
		ТекущаяВетка = ТекущаяВетка.ПолучитьЭлементы()[0];
		Если ТекущаяВетка.ПолноеИмя = ТекущийКаталог Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Родитель = ТекущаяВетка.ПолучитьРодителя();
	Если Родитель = Неопределено Тогда
		ТекущийКаталог = "";
	Иначе
		ТекущийКаталог = Родитель.ПолноеИмя;
	КонецЕсли;

	ТекущийКаталогСервер = ТекущийКаталог;
	ОбновитьСервер();
	ОбновитьИсториюСервер();
КонецПроцедуры


&НаКлиенте
Процедура Копировать(Команда)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура Переместить(Команда)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогКоманда(Команда)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоWindows()
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Возврат СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 Или СистемнаяИнформация.ТипПлатформы
		= ТипПлатформы.Windows_x86_64;

КонецФункции

&НаСервереБезКонтекста
Процедура РазвернутьФайлНаСервере(АдресВХранилище, КонечноеИмяФайла)
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ДвоичныеДанные.Записать(КонечноеИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоФайлов(НаКлиенте = Истина)
	Если НаКлиенте = Ложь Тогда
		ЭлементДерево = Элементы.ФайлыСервер;
		Дерево = ФайлыСервер;
		ТекущийКаталог = ТекущийКаталогСервер;
		ФайлыТекущегоКаталога = ПолучитьСодержимоеКаталогаНаСервере(ТекущийКаталог, РазделительПутиСервер,
			WindowsСервер);
		ТекущийРазделительПути=РазделительПутиСервер;
		ЭтоWindows=WindowsСервер;
	Иначе
		ЭлементДерево = Элементы.ФайлыКлиент;
		Дерево = ФайлыКлиент;
		ТекущийКаталог = ТекущийКаталогКлиент;
		ФайлыТекущегоКаталога = ПолучитьСодержимоеКаталогаНаКлиенте(ТекущийКаталог);
		ТекущийРазделительПути=РазделительПутиКлиент;
		ЭтоWindows=WindowsКлиент;

	КонецЕсли;

	Дерево.ПолучитьЭлементы().Очистить();

	ТекущийРодитель = Дерево;
	ПолноеИмя = "";
	ПутьДляРазбора = СтрЗаменить(ТекущийКаталог, ТекущийРазделительПути + ТекущийРазделительПути, ":::");
	ИндексКартинки = 6;
	Если ПустаяСтрока(ТекущийКаталог) И ЭтоWindows Тогда
		Если ЭтоWindows Тогда
			Диски = ПолучитьСписокДисковНаСервереWindows(ТекущийРазделительПути);

			Для Каждого ИмяДиска Из Диски Цикл
				НоваяСтрока = Дерево.ПолучитьЭлементы().Добавить();
				НоваяСтрока.ИндексКартинки = 6;
				НоваяСтрока.Имя = ИмяДиска;
				НоваяСтрока.ЭтоКаталог = Истина;
				НоваяСтрока.ПолноеИмя = НоваяСтрока.Имя;
			КонецЦикла;

			Возврат;

		КонецЕсли;
	ИначеЕсли Не ЭтоWindows Тогда
		ТекущийРодитель = ТекущийРодитель.ПолучитьЭлементы().Добавить();
		ТекущийРодитель.ИндексКартинки = ИндексКартинки;
		ТекущийРодитель.Имя = ТекущийРазделительПути;
		ТекущийРодитель.ЭтоКаталог = Истина;
		ТекущийРодитель.ПолноеИмя = ТекущийРазделительПути;
		ИндексКартинки = 1;

		Если СтрНачинаетсяС(ПутьДляРазбора, ТекущийРазделительПути) Тогда
			ПутьДляРазбора=Сред(ПутьДляРазбора, 2);
		КонецЕсли;
	КонецЕсли;

	МассивТекущийПуть = СтрРазделить(ПутьДляРазбора, ТекущийРазделительПути);//РазложитьСтрокуВМассивПодстрок(ПутьДляРазбора, ТекущийРазделительПути);
	Для Каждого ИмяКаталога Из МассивТекущийПуть Цикл
		Если ПустаяСтрока(ИмяКаталога) Тогда
			Прервать;
		КонецЕсли;

		ИмяКаталога = СтрЗаменить(ИмяКаталога, ":::", ТекущийРазделительПути + ТекущийРазделительПути);

		ПолноеИмя = ПолноеИмя + ИмяКаталога + ТекущийРазделительПути;
		ТекущийРодитель = ТекущийРодитель.ПолучитьЭлементы().Добавить();
		ТекущийРодитель.ИндексКартинки = ИндексКартинки;
		ТекущийРодитель.Имя = ИмяКаталога + ТекущийРазделительПути;
		ТекущийРодитель.ЭтоКаталог = Истина;
		ТекущийРодитель.ПолноеИмя = ТекущийРазделительПути + ПолноеИмя;
		ИндексКартинки = 1;
	КонецЦикла;

	Для Каждого СтрокаСтруктура Из ФайлыТекущегоКаталога Цикл
		ЗаполнитьЗначенияСвойств(ТекущийРодитель.ПолучитьЭлементы().Добавить(), СтрокаСтруктура);
	КонецЦикла;

	Если ТипЗнч(ТекущийРодитель) = Тип("ДанныеФормыЭлементДерева") Тогда
		ЭлементДерево.ТекущаяСтрока = ТекущийРодитель.ПолучитьИдентификатор();
		ЭлементДерево.Развернуть(ЭлементДерево.ТекущаяСтрока);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИсториюКлиент()
	ОбновитьИсторию(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИсториюСервер()
	ОбновитьИсторию(Ложь);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьИсторию(НаКлиенте = Истина)
	Если НаКлиенте = Ложь Тогда
		ТекущийКаталог = ТекущийКаталогСервер;
		ЭлементТекущийКаталог = Элементы.ТекущийКаталогСервер;
		СписокИстория = ИсторияВыбораСервер;
	Иначе
		ТекущийКаталог = ТекущийКаталогКлиент;
		ЭлементТекущийКаталог = Элементы.ТекущийКаталогКлиент;
		СписокИстория = ИсторияВыбораКлиент;
	КонецЕсли;

	НайденныйЭлемент = СписокИстория.НайтиПоЗначению(ТекущийКаталог);
	Если Не НайденныйЭлемент = Неопределено Тогда
		СписокИстория.Удалить(НайденныйЭлемент);
	КонецЕсли;
	СписокИстория.Вставить(0, ТекущийКаталог);

	РазмерСпискаИстории = 25;
	Пока РазмерСпискаИстории < СписокИстория.Количество() Цикл
		СписокИстория.Удалить(СписокИстория.Количество() - 1);
	КонецЦикла;

	ЭлементТекущийКаталог.СписокВыбора.ЗагрузитьЗначения(СписокИстория.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСодержимоеКаталогаНаСервере(Каталог, РазделительПути, ЭтоWindows)
	Возврат ПолучитьСодержимоеКаталога(Каталог, РазделительПути, ЭтоWindows);
КонецФункции

&НаКлиенте
Функция ПолучитьСодержимоеКаталогаНаКлиенте(Каталог)
	Возврат ПолучитьСодержимоеКаталога(Каталог, РазделительПутиКлиент, WindowsКлиент);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСодержимоеКаталога(Каталог, РазделительПути, ЭтоWindows)
	Результат = Новый Массив;

	Файлы = НайтиФайлы(Каталог, "*", Ложь);
	Для Каждого Файл Из Файлы Цикл
		Если Ложь Тогда
			Файл = Новый Файл;
		КонецЕсли;
		СтрокаСтруктура = Новый Структура;

		СтрокаСтруктура.Вставить("ЭтоКаталог", Файл.ЭтоКаталог());

		ПолноеИмяФайла=СтрЗаменить(Файл.ПолноеИмя, РазделительПути + РазделительПути, РазделительПути) + ?(
			СтрокаСтруктура.ЭтоКаталог, РазделительПути, "");

		СтрокаСтруктура.Вставить("ПолноеИмя", ПолноеИмяФайла);

		Если СтрокаСтруктура.ЭтоКаталог Тогда
			Если ЗначениеЗаполнено(Файл.Имя) Тогда
				ИмяФайла=Файл.Имя;
			Иначе
				ИмяФайла=СтрЗаменить(Файл.Путь, РазделительПути, "");
			КонецЕсли;

			ИмяФайла=ИмяФайла + РазделительПути;
		Иначе
			ИмяФайла=Файл.ИмяБезРасширения;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
			ИмяФайла=ПолноеИмяФайла;

			Если Не СтрокаСтруктура.ЭтоКаталог И СтрНачинаетсяС(ИмяФайла, РазделительПути) Тогда
				ИмяФайла=Сред(ИмяФайла, 2);
			КонецЕсли;
		КонецЕсли;
		СтрокаСтруктура.Вставить("Имя", ИмяФайла);
		СтрокаСтруктура.Вставить("Расширение", ?(СтрокаСтруктура.ЭтоКаталог, "", Файл.Расширение));
		СтрокаСтруктура.Вставить("ИндексКартинки", ИндексКартинки(СтрокаСтруктура.Расширение,
			СтрокаСтруктура.ЭтоКаталог));
		СтрокаСтруктура.Вставить("ДатаИзменения", Файл.ПолучитьВремяИзменения());

		Если Не СтрокаСтруктура.ЭтоКаталог Тогда
			СтрокаСтруктура.Вставить("Размер", Файл.Размер() / 1000);
		КонецЕсли;
		СтрокаСтруктура.Вставить("Представление", Формат(СтрокаСтруктура.ДатаИзменения, "ДФ='yyyy-MM-dd HH:MM:ss'"));

		Результат.Добавить(СтрокаСтруктура);
	КонецЦикла;

//	Результат.СортироватьПоПредставлению(НаправлениеСортировки.Убыв);
//	Возврат Результат.ВыгрузитьЗначения();

	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ИндексКартинки(Знач Расширение, ЭтоКаталог)
	Расширение = НРег(Сред(Расширение, 2));
	Если ЭтоКаталог = Истина Тогда
		Возврат 1;
	ИначеЕсли Расширение = "txt" Тогда
		Возврат 2;
	ИначеЕсли Найти("\jpg\jpeg\png\gif\", "\" + Расширение + "\") Тогда
		Возврат 3;
	ИначеЕсли Найти("\zip\rar\7z\", "\" + Расширение + "\") Тогда
		Возврат 4;
	ИначеЕсли Расширение = "exe" Тогда
		Возврат 5;
	ИначеЕсли Расширение = "epf" Тогда
		Возврат 7;
	ИначеЕсли Расширение = "erf" Тогда
		Возврат 8;
	ИначеЕсли Найти("\doc\docx\", "\" + Расширение + "\") Тогда
		Возврат 9;
	ИначеЕсли Найти("\xls\xlsx\", "\" + Расширение + "\") Тогда
		Возврат 10;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(пИсходнаяСтрока, пРазделитель = ",") Экспорт
	Возврат ЗначениеИзСтрокиВнутр("{""#"",51e7a0d2-530b-11d4-b98a-008048da3034,{0,{""S"",""" + СтрЗаменить(СтрЗаменить(
		пИсходнаяСтрока, """", """"""), пРазделитель, """},{""S"",""") + """}}}");
	// http://infostart.ru/public/71130/#Pro_bystrye_massivy
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокДисковНаСервереWindows(РазделительПути)
	Результат = Новый Массив;

	Для сч = 0 По 25 Цикл
		БукваДиска = Символ(КодСимвола("A") + сч) + ":" + РазделительПути;
		Если НайтиФайлы(БукваДиска).Количество() > 0 Тогда
			Результат.Добавить(БукваДиска);
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ИмяКаталонаНаСервере(ИмяКаталога)
	Возврат Вычислить(ИмяКаталога + "()");
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РазмерФайла(РазмерФайлаВБайтах, ЕдиницаИзмерения)
	ЕдиницаИзмерения = "КБ";
	Возврат РазмерФайлаВБайтах / 1000;
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьФайлыНаСервере(ИмяФайла)
	УдалитьФайлы(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоместитьВоВременноеХранилищеНаСервере(ИсходныйФайл, ИдентификаторФормы)
	ДвоичныеДанные = Новый ДвоичныеДанные(ИсходныйФайл);
	АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ИдентификаторФормы);
	Возврат АдресВХранилище;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиВсеФайлыНаСервере(ТекущийКаталог, РазделительПути)
	Результат = Новый Массив;

	НайденныеФайлы = НайтиФайлы(ТекущийКаталог, "*", Истина);
	Для Каждого Файл Из НайденныеФайлы Цикл
		СтрокаСтруктура = Новый Структура;
		Результат.Добавить(СтрокаСтруктура);

		СтрокаСтруктура.Вставить("ЭтоКаталог", Файл.ЭтоКаталог());
		СтрокаСтруктура.Вставить("ПолноеИмя", Файл.ПолноеИмя + ?(СтрокаСтруктура.ЭтоКаталог, РазделительПути, ""));
	КонецЦикла;

	Возврат Результат;
КонецФункции

&НаКлиенте
Функция НайтиВсеФайлыНаКлиенте(ТекущийКаталог, РазделительПути)
	Результат = Новый Массив;

	НайденныеФайлы = НайтиФайлы(ТекущийКаталог, "*", Истина);
	Для Каждого Файл Из НайденныеФайлы Цикл
		СтрокаСтруктура = Новый Структура;
		Результат.Добавить(СтрокаСтруктура);

		СтрокаСтруктура.Вставить("ЭтоКаталог", Файл.ЭтоКаталог());
		СтрокаСтруктура.Вставить("ПолноеИмя", Файл.ПолноеИмя + ?(СтрокаСтруктура.ЭтоКаталог, РазделительПути, ""));
	КонецЦикла;

	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура СоздатьКаталогНаСервере(ИмяКаталога)
	Файл = Новый Файл(ИмяКаталога);
	Если Не Файл.Существует() Тогда
		СоздатьКаталог(ИмяКаталога);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПереименоватьФайлНаСервере(ИмяФайлаИсточника, ИмяФайлаПриемника, РазделительПути)
	Файл = Новый Файл(ИмяФайлаИсточника);
	Если Файл.ЭтоФайл() Тогда
		ПереместитьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
	Иначе
		МассивСлов = РазложитьСтрокуВМассивПодстрок(ИмяФайлаПриемника, РазделительПути);
		Если ПустаяСтрока(МассивСлов[МассивСлов.ВГраница()]) Тогда
			МассивСлов.Удалить(МассивСлов.ВГраница());
		КонецЕсли;
		ФСО = Новый COMОбъект("Scripting.FileSystemObject");

		ФСО.GetFolder(ИмяФайлаИсточника).Name = МассивСлов[МассивСлов.ВГраница()];
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьФайлНаКлиенте(ИмяФайлаИсточника, ИмяФайлаПриемника, РазделительПути)
	Файл = Новый Файл(ИмяФайлаИсточника);
	Если Файл.ЭтоФайл() Тогда
		ПереместитьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
	Иначе
		МассивСлов = РазложитьСтрокуВМассивПодстрок(ИмяФайлаПриемника, РазделительПути);
		Если ПустаяСтрока(МассивСлов[МассивСлов.ВГраница()]) Тогда
			МассивСлов.Удалить(МассивСлов.ВГраница());
		КонецЕсли;
		ФСО = Новый COMОбъект("Scripting.FileSystemObject");

		ФСО.GetFolder(ИмяФайлаИсточника).Name = МассивСлов[МассивСлов.ВГраница()];
	КонецЕсли;

КонецПроцедуры




#КонецОбласти