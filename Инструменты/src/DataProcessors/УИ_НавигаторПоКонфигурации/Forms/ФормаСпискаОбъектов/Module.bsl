&НаСервереБезКонтекста
Функция вЕстьПраваАдминистратора()
	Возврат ПравоДоступа("Администрирование", Метаданные);
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.Список_ВыбратьОбъект.Видимость = Параметры.РежимВыбора;
	Элементы.СписокКонтекстноеМеню_ВыбратьОбъект.Видимость = Параметры.РежимВыбора;

	ТипХЗ = Тип("ХранилищеЗначения");

	Заголовок = Параметры.ПолноеИмя;
	ПутьКФормам = Параметры.ПутьКФормам;

	Список.ПроизвольныйЗапрос = Ложь;
	Список.ОсновнаяТаблица = Параметры.ПолноеИмя;
	Список.ДинамическоеСчитываниеДанных = Истина;

	Если Не вЕстьПраваАдминистратора() Тогда
		Элементы.Список_УдалитьОбъекты.Видимость = Ложь;
		Элементы.СписокКонтекстноеМеню_УдалитьОбъекты.Видимость = Ложь;
	КонецЕсли;

	ОбъектМД = Метаданные.НайтиПоПолномуИмени(Параметры.ПолноеИмя);

	ОбъектОбработан = Истина;
	Если Найти(Параметры.ПолноеИмя, "РегистрСведений") Тогда
		вОбработатьРегистр(ОбъектМД, ТипХЗ, Истина);
	ИначеЕсли Найти(Параметры.ПолноеИмя, "РегистрНакопления") Тогда
		вОбработатьРегистр(ОбъектМД, ТипХЗ, , Истина);
	ИначеЕсли Найти(Параметры.ПолноеИмя, "РегистрБухгалтерии") Тогда
		вОбработатьРегистр(ОбъектМД, ТипХЗ, , , Истина);
	ИначеЕсли Найти(Параметры.ПолноеИмя, "РегистрРасчета") Тогда
		вОбработатьРегистр(ОбъектМД, ТипХЗ, , , , Истина);
	Иначе
		ОбъектОбработан = Ложь;
	КонецЕсли;

	Если ОбъектОбработан Тогда
		Элементы.Список_ОткрытьОбъект.Видимость = Ложь;
		Элементы.Список_УдалитьОбъекты.Видимость = Ложь;
		Элементы.СписокКонтекстноеМеню_ОткрытьОбъект.Видимость = Ложь;
		Элементы.СписокКонтекстноеМеню_УдалитьОбъекты.Видимость = Ложь;
		Возврат;
	КонецЕсли;

	ПереченьСвойств = "Иерархический, ВидИерархии, ДлинаКода, ДлинаНомера, ДлинаНаименования, ДлинаПорядка, Владельцы";
	СтрукСвойства = Новый Структура(ПереченьСвойств);
	ЗаполнитьЗначенияСвойств(СтрукСвойства, ОбъектМД);

	МассивСтандартныхПолей = Новый Массив;
	Если ЗначениеЗаполнено(СтрукСвойства.ДлинаНаименования) Тогда
		МассивСтандартныхПолей.Добавить("Наименование");
	КонецЕсли;
	Если СтрукСвойства.Владельцы <> Неопределено И СтрукСвойства.Владельцы.Количество() <> 0 Тогда
		МассивСтандартныхПолей.Добавить("Владелец");
	КонецЕсли;
	Если СтрукСвойства.ВидИерархии = Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов Тогда
		МассивСтандартныхПолей.Добавить("ЭтоГруппа");
	КонецЕсли;
	Если СтрукСвойства.Иерархический = Истина Тогда
		МассивСтандартныхПолей.Добавить("Родитель");
	КонецЕсли;
	Если Найти(Параметры.ПолноеИмя, "Документ.") = 1 Тогда
		МассивСтандартныхПолей.Добавить("Дата");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрукСвойства.ДлинаКода) Тогда
		МассивСтандартныхПолей.Добавить("Код");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрукСвойства.ДлинаНомера) Тогда
		МассивСтандартныхПолей.Добавить("Номер");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтрукСвойства.ДлинаПорядка) Тогда
		МассивСтандартныхПолей.Добавить("Порядок");
	КонецЕсли;

	Для Каждого Элем Из МассивСтандартныхПолей Цикл
		Попытка
			ЭФ = Элементы.Добавить("Список_" + Элем, Тип("ПолеФормы"), Элементы.Список);
			ЭФ.Вид = ВидПоляФормы.ПолеВвода;
			ЭФ.ПутьКДанным = "Список." + Элем;
		Исключение
			Элементы.Удалить(ЭФ);
		КонецПопытки;
	КонецЦикла;

	ТабРеквизиты = Новый ТаблицаЗначений;
	ТабРеквизиты.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));

	Для Каждого Элем Из ОбъектМД.Реквизиты Цикл
		Если Не Элем.Тип.СодержитТип(ТипХЗ) Тогда
			НС = ТабРеквизиты.Добавить();
			НС.Имя = Элем.Имя;
		КонецЕсли;
	КонецЦикла;
	ТабРеквизиты.Сортировать("Имя");

	Для Каждого Элем Из ТабРеквизиты Цикл
		Попытка
			ЭФ = Элементы.Добавить("Список_" + Элем.Имя, Тип("ПолеФормы"), Элементы.Список);
			ЭФ.Вид = ВидПоляФормы.ПолеВвода;
			ЭФ.ПутьКДанным = "Список." + Элем.Имя;
			Если Истина Тогда
				ЭФ.Заголовок = Элем.Имя;
			КонецЕсли;
		Исключение
			Элементы.Удалить(ЭФ);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура вОбработатьРегистр(ОбъектМД, ТипХЗ, ЭтоРС = Ложь, ЭтоРН = Ложь, ЭтоРБ = Ложь, ЭтоРР = Ложь)
	СтрукРазделы = Новый Структура("Измерения, Ресурсы, Реквизиты");

	ЕстьКорреспонденция = ЭтоРБ И ОбъектМД.Корреспонденция;

	МассивСтандартныхПолей = Новый Массив;
	Если ЭтоРС Тогда
		МассивСтандартныхПолей.Добавить("Активность");
		Если ОбъектМД.ПериодичностьРегистраСведений
			<> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
			МассивСтандартныхПолей.Добавить("Период");
		КонецЕсли;
		Если ОбъектМД.РежимЗаписи <> Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый Тогда
			МассивСтандартныхПолей.Добавить("Регистратор");
		КонецЕсли;
	ИначеЕсли ЭтоРН Тогда
		Если ОбъектМД.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
			МассивСтандартныхПолей.Добавить("ВидДвижения");
		КонецЕсли;
		МассивСтандартныхПолей.Добавить("Активность");
		МассивСтандартныхПолей.Добавить("Период");
		МассивСтандартныхПолей.Добавить("Регистратор");
	ИначеЕсли ЭтоРБ Тогда
		Если Не ЕстьКорреспонденция Тогда
			МассивСтандартныхПолей.Добавить("ВидДвижения");
		КонецЕсли;
		МассивСтандартныхПолей.Добавить("Активность");
		МассивСтандартныхПолей.Добавить("Период");
		МассивСтандартныхПолей.Добавить("Регистратор");
		Если ЕстьКорреспонденция Тогда
			МассивСтандартныхПолей.Добавить("СчетДт");
			МассивСтандартныхПолей.Добавить("СчетКт");
		Иначе
			МассивСтандартныхПолей.Добавить("Счет");
		КонецЕсли;
	ИначеЕсли ЭтоРР Тогда
		МассивСтандартныхПолей.Добавить("Активность");
		МассивСтандартныхПолей.Добавить("ВидРасчета");
		МассивСтандартныхПолей.Добавить("ПериодДействия");
		МассивСтандартныхПолей.Добавить("ПериодДействияНачало");
		МассивСтандартныхПолей.Добавить("ПериодДействияКонец");
		МассивСтандартныхПолей.Добавить("Регистратор");
	КонецЕсли;

	Для Каждого Элем Из МассивСтандартныхПолей Цикл
		Попытка
			ЭФ = Элементы.Добавить("Список_" + Элем, Тип("ПолеФормы"), Элементы.Список);
			ЭФ.Вид = ВидПоляФормы.ПолеВвода;
			ЭФ.ПутьКДанным = "Список." + Элем;
		Исключение
			Элементы.Удалить(ЭФ);
		КонецПопытки;
	КонецЦикла;

	Для Каждого Раздел Из СтрукРазделы Цикл
		Для Каждого Элем Из ОбъектМД[Раздел.Ключ] Цикл
			Если Не Элем.Тип.СодержитТип(ТипХЗ) Тогда
				Попытка
					Если ЕстьКорреспонденция И (Раздел.Ключ = "Измерения" Или Раздел.Ключ = "Ресурсы")
						И Не Элем.Балансовый Тогда
						ЭФ = Элементы.Добавить("Список_" + Элем.Имя + "Дт", Тип("ПолеФормы"), Элементы.Список);
						ЭФ.Вид = ВидПоляФормы.ПолеВвода;
						ЭФ.ПутьКДанным = "Список." + Элем.Имя + "Дт";

						ЭФ = Элементы.Добавить("Список_" + Элем.Имя + "Кт", Тип("ПолеФормы"), Элементы.Список);
						ЭФ.Вид = ВидПоляФормы.ПолеВвода;
						ЭФ.ПутьКДанным = "Список." + Элем.Имя + "Кт";
					Иначе
						ЭФ = Элементы.Добавить("Список_" + Элем.Имя, Тип("ПолеФормы"), Элементы.Список);
						ЭФ.Вид = ВидПоляФормы.ПолеВвода;
						ЭФ.ПутьКДанным = "Список." + Элем.Имя;
					КонецЕсли;
				Исключение
					Элементы.Удалить(ЭФ);
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура _ОткрытьОбъект(Команда)
	ТекДанные = Элементы.Список.ТекущаяСтрока;
	Если ТекДанные <> Неопределено Тогда
		Значение = ТекДанные;

		СтрукПарам = Новый Структура;
		СтрукПарам.Вставить("мОбъектСсылка", Значение);
		ОткрытьФорму(ПутьКФормам + "ФормаОбъекта", СтрукПарам, , Значение);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура _УдалитьОбъекты(Команда)
	МассивСсылок = Новый Массив;

	Для Каждого Элем Из Элементы.Список.ВыделенныеСтроки Цикл
		МассивСсылок.Добавить(Элем);
	КонецЦикла;

	ЧислоЭлементов = МассивСсылок.Количество();

	Если ЧислоЭлементов = 0 Тогда
		Возврат;
	ИначеЕсли ЧислоЭлементов = 1 Тогда
		ТекстВопроса = "Объект будет удален из базы!
					   |Никакие проверки производиться не будут (возможно появление битых ссылок)!
					   |
					   |Продолжить?";
	Иначе
		ТекстВопроса = "Объекты (" + ЧислоЭлементов + " шт) будут удалены из базы!
													  |Никакие проверки производиться не будут (возможно появление битых ссылок)!
													  |
													  |Продолжить?";
	КонецЕсли;

	ПоказатьВопрос(Новый ОписаниеОповещения("вУдалитьОбъекты", ЭтаФорма, МассивСсылок), ТекстВопроса,
		РежимДиалогаВопрос.ДаНетОтмена, 20, , "ВНИМАНИЕ");
КонецПроцедуры

&НаКлиенте
Процедура вУдалитьОбъекты(РезультатВопроса, МассивСсылок) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Для Каждого Ссылка Из МассивСсылок Цикл
			вУдалитьОбъектНаСервере(Ссылка);
		КонецЦикла;
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура вУдалитьОбъектНаСервере(Ссылка)
	Попытка
		пОбъект = Ссылка.ПолучитьОбъект();
		Если пОбъект = Неопределено Тогда
			Возврат;
		КонецЕсли;
		пОбъект.Удалить();
	Исключение
		Сообщить("Ошибка при удалении объекта:" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры
&НаКлиенте
Процедура _ВыбратьОбъект(Команда)
	Если Параметры.РежимВыбора Тогда
		ТекДанные = Элементы.Список.ТекущаяСтрока;
		Если ТекДанные <> Неопределено Тогда
			ОповеститьОВыборе(ТекДанные);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Параметры.РежимВыбора Тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры