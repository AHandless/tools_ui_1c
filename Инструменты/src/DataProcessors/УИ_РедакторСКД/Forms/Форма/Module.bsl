&НаКлиенте
Перем ВидыНаборовДанных;

&НаКлиенте
Перем ВидыПолейНаборовДанных;

#Область СобытияФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализироватьФорму();
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы
&НаКлиенте
Процедура НаборыДанныхПередНачаломИзменения(Элемент, Отказ)
	Если Элементы.НаборыДанных.ТекущаяСтрока = ИдентификаторНулевогоНабораДанных Тогда
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаборыДанныхПриАктивизацииСтроки(Элемент)
	ТекДанныеНабора=Элементы.НаборыДанных.ТекущиеДанные;
	Если ТекДанныеНабора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанныеНабора.Вид = ВидыНаборовДанных.Корень Тогда
		Элементы.ГруппаНаборыДанныхПраваяПанель.ТекущаяСтраница=Элементы.ГруппаНаборыДанныхПраваяПанельИсточникиДанных;
		Возврат;
	КонецЕсли;

	Элементы.ГруппаНаборыДанныхПраваяПанель.ТекущаяСтраница=Элементы.ГруппаНаборыДанныхПраваяПанельДанныеНабора;

	ТекДанныеНабора=Элементы.НаборыДанных.ТекущиеДанные;
	Элементы.ГруппаПанельРедактированияНастроекНабора.Видимость=ТекДанныеНабора.Вид <> ВидыНаборовДанных.Объединение;
	Если ТекДанныеНабора.Вид = ВидыНаборовДанных.Запрос Тогда
		Элементы.ГруппаПанельРедактированияНастроекНабора.ТекущаяСтраница=Элементы.ГруппаСтраницаРедактированияНастроекНабораЗапрос;
	ИначеЕсли ТекДанныеНабора.Вид = ВидыНаборовДанных.Объект Тогда
		Элементы.ГруппаПанельРедактированияНастроекНабора.ТекущаяСтраница=Элементы.ГруппаСтраницаРедактированияНастроекНабораОбъект;
	КонецЕсли;

	Элементы.ПоляНаборДанныхПроверкиИерархии.СписокВыбора.Очистить();
	Элементы.ПоляНаборДанныхПроверкиИерархии.СписокВыбора.Добавить("");

	Для Каждого Набор Из НаборыДанныхВерхнегоУровня() Цикл
		Если Набор.Имя = ТекДанныеНабора.Имя Тогда
			Продолжить;
		КонецЕсли;

		Элементы.ПоляНаборДанныхПроверкиИерархии.СписокВыбора.Добавить(Набор.Имя);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура НаборыДанныхЗапросПриИзменении(Элемент)
	ЗаполнитьПоляНабораДанныхПриИзмененииЗапроса(Элементы.НаборыДанных.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ГруппаЗакладкиРедактораПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.ГруппаСтраницаСвязиНаборовДанных Тогда
		ЗаполнитьВспомогательныеДанныеСвязейНаборовДанных();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьНаборДанныхЗапрос(Команда)
	ДобавитьНаборДанных(ВидыНаборовДанных.Запрос);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНаборДанныхОбъект(Команда)
	ДобавитьНаборДанных(ВидыНаборовДанных.Объект);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНаборДанныхОбъединение(Команда)
	ДобавитьНаборДанных(ВидыНаборовДанных.Объединение);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаборДанных(Команда)
	ИдентификаторТекущейСтроки=Элементы.НаборыДанных.ТекущаяСтрока;
	Если ИдентификаторТекущейСтроки = ИдентификаторНулевогоНабораДанных Тогда
		Возврат;
	КонецЕсли;

	СтрокаНабораДанных=НаборыДанных.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	СтрокаРодитель=СтрокаНабораДанных.ПолучитьРодителя();
	СтрокаРодитель.ПолучитьЭлементы().Удалить(СтрокаНабораДанных);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Команда)
	ТекНабор=Элементы.НаборыДанных.ТекущиеДанные;
	Если ТекНабор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Конструктор=Новый КонструкторЗапроса(ТекНабор.Запрос);

	ДопПараметрыОповещения=Новый Структура;
	ДопПараметрыОповещения.Вставить("ТекСтрока", Элементы.НаборыДанных.ТекущаяСтрока);

	Конструктор.Показать(Новый ОписаниеОповещения("ОткрытьКонструкторЗапросаЗавершение", ЭтотОбъект,
		ДопПараметрыОповещения));
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьВспомогательныеДанныеСвязейНаборовДанных()
	Наборы=НаборыДанныхВерхнегоУровня();

	Элементы.СвязиНаборовДанныхНаборДанныхИсточник.СписокВыбора.Очистить();
	Элементы.СвязиНаборовДанныхНаборДанныхПриемник.СписокВыбора.Очистить();

	Для Каждого Набор Из Наборы Цикл
		Элементы.СвязиНаборовДанныхНаборДанныхИсточник.СписокВыбора.Добавить(Набор.Имя);
		Элементы.СвязиНаборовДанныхНаборДанныхПриемник.СписокВыбора.Добавить(Набор.Имя);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоляНабораДанныхПриИзмененииЗапроса(ИдентификаторСтрокиНабора)
	ЗаполнитьПоляНабораДанныхПриИзмененииЗапросаНаСервере(ИдентификаторСтрокиНабора);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоляНабораДанныхПриИзмененииЗапросаНаСервере(ИдентификаторСтрокиНабора)
	СтрокаНабора=НаборыДанных.НайтиПоИдентификатору(ИдентификаторСтрокиНабора);
	Если Не СтрокаНабора.АвтоЗаполнениеДоступныхПолей Тогда
		Возврат;
	КонецЕсли;

	ВидыПолейНаборовДанных=ВидыПолейНаборовДанных();

	СхемаЗапроса=Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(СтрокаНабора.Запрос);

	СтрокаНабора.Поля.Очистить();

	ИндексПакета=СхемаЗапроса.ПакетЗапросов.Количество() - 1;
	НужныйПакет=СхемаЗапроса.ПакетЗапросов[ИндексПакета];
	Пока ТипЗнч(НужныйПакет) <> Тип("ЗапросВыбораСхемыЗапроса") Цикл
		Если ИндексПакета < 0 Тогда
			Прервать;
		КонецЕсли;
		ИндексПакета=ИндексПакета - 1;
		НужныйПакет=СхемаЗапроса.ПакетЗапросов[ИндексПакета];
	КонецЦикла;

	Если ТипЗнч(НужныйПакет) <> Тип("ЗапросВыбораСхемыЗапроса") Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Колонка Из НужныйПакет.Колонки Цикл
		НовоеПоле=СтрокаНабора.Поля.Добавить();
		НовоеПоле.Поле=Колонка.Псевдоним;
		НовоеПоле.ПутьКДанным=Колонка.Псевдоним;
		Если ТипЗнч(Колонка) = Тип("КолонкаВложеннаяТаблицаСхемыЗапроса") Тогда
			НовоеПоле.Вид=ВидыПолейНаборовДанных.Набор;
			НовоеПоле.Картинка=БиблиотекаКартинок.ВложеннаяТаблица;
		Иначе
			НовоеПоле.Вид=ВидыПолейНаборовДанных.Поле;
			НовоеПоле.Картинка=БиблиотекаКартинок.Реквизит;
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапросаЗавершение(Текст, ДополнительныеПараметры) Экспорт
	Если Текст = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИдентификаторСтроки=ДополнительныеПараметры.ТекСтрока;
	СтрокаНабора=НаборыДанных.НайтиПоИдентификатору(ИдентификаторСтроки);

	СтрокаНабора.Запрос=Текст;

	ЗаполнитьПоляНабораДанныхПриИзмененииЗапроса(ИдентификаторСтроки);
КонецПроцедуры
&НаКлиенте
Процедура ДобавитьНаборДанных(Вид)
	ТекДанные=Элементы.НаборыДанных.ТекущиеДанные;
	Если ТекДанные.Вид = ВидыНаборовДанных.Объединение Тогда
		СтрокаДереваДляДобавления=НаборыДанных.НайтиПоИдентификатору(Элементы.НаборыДанных.ТекущаяСтрока);
	Иначе
		СтрокаДереваДляДобавления=НаборыДанных.НайтиПоИдентификатору(ИдентификаторНулевогоНабораДанных);
	КонецЕсли;

	НаборДанных=СтрокаДереваДляДобавления.ПолучитьЭлементы().Добавить();
	НаборДанных.Имя="НаборДанных" + НаборДанных.ПолучитьИдентификатор();
	НаборДанных.Вид=Вид;

	Если Вид = ВидыНаборовДанных.Запрос Тогда
		НаборДанных.Картинка=БиблиотекаКартинок.НоваяТаблицаКомпоновкиДанных;
		НаборДанных.АвтоЗаполнениеДоступныхПолей=Истина;
		НаборДанных.ИспользоватьГруппировкиЗапросаЕслиВозможно=Истина;
	ИначеЕсли Вид = ВидыНаборовДанных.Объект Тогда
		НаборДанных.Картинка=БиблиотекаКартинок.УИ_НаборДанныхСКДОбъект;
	ИначеЕсли Вид = ВидыНаборовДанных.Объединение Тогда
		НаборДанных.Картинка=БиблиотекаКартинок.УИ_НаборДанныхСКДОбъединение;
	КонецЕсли;

	Элементы.НаборыДанных.ТекущаяСтрока=СтрокаДереваДляДобавления.ПолучитьИдентификатор();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВидыНаборовДанных()
	Структура=Новый Структура;
	Структура.Вставить("Корень", "Корень");
	Структура.Вставить("Запрос", "НаборДанныхЗапросСхемыКомпоновкиДанных");
	Структура.Вставить("Объект", "НаборДанныхОбъектСхемыКомпоновкиДанных");
	Структура.Вставить("Объединение", "НаборДанныхОбъединениеСхемыКомпоновкиДанных");

	Возврат Структура;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВидыПолейНаборовДанных()
	Структура=Новый Структура;
	Структура.Вставить("Поле", "ПолеНабораДанныхСхемыКомпоновкиДанных");
	Структура.Вставить("Папка", "ПапкаПолейНабораДанныхСхемыКомпоновкиДанных");
	Структура.Вставить("Набор", "ВложенныйНаборДанныхСхемыКомпоновкиДанных");

	Возврат Структура;

КонецФункции

&НаСервере
Процедура ИнициализироватьФорму()
	ВидыНаборов=ВидыНаборовДанных();

	ЛокальныйИсточникДанных=ИсточникиДанных.Добавить();
	ЛокальныйИсточникДанных.Имя="ИсточникДанных1";
	ЛокальныйИсточникДанных.ТипИсточникаДанных="Local";

	НулевойНаборДанных=НаборыДанных.ПолучитьЭлементы().Добавить();
	НулевойНаборДанных.Имя="Наборы данных";
	НулевойНаборДанных.Вид=ВидыНаборов.Корень;

	ИдентификаторНулевогоНабораДанных=НулевойНаборДанных.ПолучитьИдентификатор();
КонецПроцедуры

&НаКлиенте
Функция НаборыДанныхВерхнегоУровня()
	МассивНаборов=Новый Массив;

	НулевойНаборДанных=НаборыДанных.НайтиПоИдентификатору(ИдентификаторНулевогоНабораДанных);
	Для Каждого Набор Из НулевойНаборДанных.ПолучитьЭлементы() Цикл
		МассивНаборов.Добавить(Набор);
	КонецЦикла;

	Возврат МассивНаборов;
КонецФункции
#КонецОбласти

ВидыНаборовДанных=ВидыНаборовДанных();
ВидыПолейНаборовДанных=ВидыПолейНаборовДанных();