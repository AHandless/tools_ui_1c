
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

// Соберём доступные виды объектов в дерево
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.Справочник, "Справочники", "Справочник", "Справочники");
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.Документ, "Документы", "Документ", "Документы");
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.ПланВидовХарактеристик, "ПланыВидовХарактеристик", "ПланВидовХарактеристик", "Планы видов характеристик");
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.ПланСчетов, "ПланыСчетов", "ПланСчетов", "Планы счетов");
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.ПланВидовРасчета, "ПланыВидовРасчета", "ПланВидовРасчета", "Планы видов расчёта");
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.ПланОбмена, "ПланыОбмена", "ПланОбмена", "Планы обмена");
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.БизнесПроцесс, "БизнесПроцессы", "БизнесПроцесс", "Бизнес процессы");
	ДобавитьВДеревоВидОбъекта(БиблиотекаКартинок.Задача, "Задачи", "Задача", "Задачи");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле,
		СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	УстановитьПараметрыДинамическогоСпискаНаСервере(ВыбраннаяСтрока);
КонецПроцедуры

#КонецОбласти

#Область ПрочиеФункции

&НаСервере
Процедура УдалитьДинамическийСписок(ИмяРеквизита)
	МассивУдаляемыхРеквизитов = Новый Массив;
	МассивУдаляемыхРеквизитов.Добавить(ИмяРеквизита);

	ТекущиеРеквизитыФормы = ПолучитьРеквизиты();

	ЕстьРеквизит = Ложь;
	Для Каждого рекв из ТекущиеРеквизитыФормы Цикл
		Если рекв.Имя = ИмяРеквизита Тогда
			ЕстьРеквизит = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если ЕстьРеквизит Тогда
		ИзменитьРеквизиты(, МассивУдаляемыхРеквизитов);
	КонецЕсли;

	ДинамичныйСписок = ЭтаФорма.Элементы.Найти(ИмяРеквизита);
	Если ДинамичныйСписок <> Неопределено Тогда
		Элементы.Удалить(ДинамичныйСписок);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыДинамическогоСпискаНаСервере(ВыбраннаяСтрока)
	ТекДанные = ДеревоМетаданных.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИмяРеквизитаФормы = "ДинамическийСписок";
	УдалитьДинамическийСписок(ИмяРеквизитаФормы);

	Если Не ЗначениеЗаполнено(ТекДанные.ВидОбъекта) Тогда
		Элементы.ГруппаСтраницыВыбораДинамическогоСписка.ТекущаяСтраница = Элементы.ГруппаБезДинамическогоСписка;
		Возврат;
	КонецЕсли;

	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизитаФормы, Новый ОписаниеТипов("ДинамическийСписок"), , ТекДанные.Представление, Ложь));

	ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	ТекСписок = ЭтотОбъект[ИмяРеквизитаФормы];

	ТекСписок.ОсновнаяТаблица = ТекДанные.ТипОбъектов + "."
		+ ТекДанные.ВидОбъекта;
	ТекСписок.ПроизвольныйЗапрос = Ложь;

	// Создаём таблицу (элемент формы) для отображения данных
	ЭлементФормы = Элементы.Добавить(ИмяРеквизитаФормы, Тип("ТаблицаФормы"), Элементы.ГруппаДинамическийСписок);
	ЭлементФормы.ПутьКДанным = ИмяРеквизитаФормы;
	ЭлементФормы.Подсказка = ТекДанные.Комментарий;
	ЭлементФормы.Заголовок = ТекДанные.Представление;
	//	ЭлементФормы.УстановитьДействие("ВыборЗначения", "СписокВыбор");
	//	ЭлементФормы.РежимВыбора = НЕ РежимПросмотраБД;
	ЭлементФормы.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
	//	ЭлементФормы.РежимВыделения = ?(РежимПросмотраБД, РежимВыделенияТаблицы.Множественный, РежимВыделенияТаблицы.Одиночный);
	//ЭлементФормы.ТекущийЭлемент.ТекущиеДанные = ВыбСсылка; //Жалко не работает. Хорошо бы устанавливать текущую строку.
	ЕстьОтображаемыеРеквизиты = Ложь;
	// Создаём колонки в отображаемой таблице
	Для Каждого ТекРеквизит Из ТекДанные.Реквизиты Цикл
		Попытка
			Колонка = Элементы.Добавить(ИмяРеквизитаФормы
				+ ТекРеквизит.Имя, Тип("ПолеФормы"), ЭлементФормы);
			Колонка.Вид = ?(ТекРеквизит.ТипЗначения.Типы().Количество() = 1
				И ТекРеквизит.ТипЗначения.Типы()[0] = Тип("Булево"), ВидПоляФормы.ПолеФлажка, ВидПоляФормы.ПолеВвода);
			Колонка.ПутьКДанным = ИмяРеквизитаФормы + "." + ТекРеквизит.Имя;
			Колонка.Подсказка = ТекРеквизит.Представление;
			ЕстьОтображаемыеРеквизиты = Истина;
		Исключение

		КонецПопытки;
	КонецЦикла;

	Если ЕстьОтображаемыеРеквизиты Тогда
		Элементы.ГруппаСтраницыВыбораДинамическогоСписка.ТекущаяСтраница = Элементы.ГруппаДинамическийСписок;
	Иначе
		Элементы.ГруппаСтраницыВыбораДинамическогоСписка.ТекущаяСтраница = Элементы.ГруппаНедоступнаяТаблица;

	КонецЕсли;
КонецПроцедуры

// Добавляет в дерево значений ветку описаний объектов.
&НаСервере
Процедура ДобавитьВДеревоВидОбъекта(Картинка, ИмяТипаМетаданных,
		ИмяТипаОбъектов, Представление)
	ЭлементыДерева = ДеревоМетаданных.ПолучитьЭлементы();

	строкаТипа = ЭлементыДерева.Добавить();
	строкаТипа.Картинка = Картинка;
	строкаТипа.Представление = Представление;
	строкаТипа.ТипОбъектов = ИмяТипаОбъектов;

	ЭлементыСтрокиДерева = строкаТипа.ПолучитьЭлементы();
	
	МассивНевыводимыхРеквизитов=Новый Массив;
	МассивНевыводимыхРеквизитов.Добавить("ССЫЛКА");
	МассивНевыводимыхРеквизитов.Добавить("ИМЯПРЕДОПРЕДЕЛЕННЫХДАННЫХ");

	Для каждого мдОбъекта из Метаданные[ИмяТипаМетаданных] Цикл
		строкаВида = ЭлементыСтрокиДерева.Добавить();
		строкаВида.Картинка = Картинка;
		строкаВида.Представление = мдОбъекта.Имя
			+ ?(ПустаяСтрока(мдОбъекта.Синоним), "", " (" + мдОбъекта.Синоним + ")");
		строкаВида.ТипОбъектов = ИмяТипаОбъектов;
		строкаВида.ВидОбъекта = мдОбъекта.Имя;
		строкаВида.Комментарий = мдОбъекта.Комментарий;

		МассивТаблицРеквизитов = Новый Массив;
		МассивТаблицРеквизитов.Добавить(мдОбъекта.СтандартныеРеквизиты);
		МассивТаблицРеквизитов.Добавить(мдОбъекта.Реквизиты);
		Если УИ_ОбщегоНазначения.ЭтоПланСчетов(мдОбъекта) Тогда
			МассивТаблицРеквизитов.Добавить(мдОбъекта.ПризнакиУчета);
		КонецЕсли;

		Для Каждого ТаблицаРеквизитов Из МассивТаблицРеквизитов Цикл
			Для Каждого Реквизит ИЗ ТаблицаРеквизитов Цикл
				НовыйРеквизит = строкаВида.Реквизиты.Добавить();
				НовыйРеквизит.Имя = Реквизит.Имя;
				НовыйРеквизит.Представление = Реквизит.Синоним;
				НовыйРеквизит.ТипЗначения = Реквизит.Тип;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти